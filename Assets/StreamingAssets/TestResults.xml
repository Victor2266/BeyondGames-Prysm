<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" testcasecount="640" result="Failed(Child)" total="640" passed="619" failed="4" inconclusive="0" skipped="17" asserts="0" engine-version="3.5.0.0" clr-version="4.0.30319.42000" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:16:39Z" duration="84.23671">
  <test-suite type="TestSuite" id="1735" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="646" result="Failed" site="Child" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:16:39Z" duration="84.236710" total="640" passed="619" failed="4" inconclusive="0" skipped="17" asserts="0">
    <properties />
    <failure>
      <message><![CDATA[One or more child tests had errors]]></message>
    </failure>
    <test-suite type="Assembly" id="2460" name="Mirror.Tests.dll" fullname="/Users/qwerty/x/dev/project_Mirror/Repository/Library/ScriptAssemblies/Mirror.Tests.dll" runstate="Runnable" testcasecount="640" result="Failed" site="Child" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:16:38Z" duration="82.362182" total="640" passed="619" failed="4" inconclusive="0" skipped="17" asserts="0">
      <properties>
        <property name="_PID" value="7631" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
      </properties>
      <failure>
        <message><![CDATA[One or more child tests had errors]]></message>
      </failure>
      <test-suite type="TestSuite" id="2463" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="623" result="Failed" site="Child" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:16:36Z" duration="80.665137" total="623" passed="619" failed="4" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <failure>
          <message><![CDATA[One or more child tests had errors]]></message>
        </failure>
        <test-suite type="TestSuite" id="2466" name="Tests" fullname="Mirror.Tests" runstate="Runnable" testcasecount="477" result="Failed" site="Child" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:23Z" duration="7.635328" total="477" passed="473" failed="4" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <failure>
            <message><![CDATA[One or more child tests had errors]]></message>
          </failure>
          <test-suite type="TestFixture" id="1928" name="ArraySegmentWriterTest" fullname="Mirror.Tests.ArraySegmentWriterTest" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.051127" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="1929" name="TestEmptyByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestEmptyByteArray" methodname="TestEmptyByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="1960393850" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.020063" asserts="0">
              <properties />
            </test-case>
            <test-case id="1932" name="TestEmptyIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestEmptyIntArray" methodname="TestEmptyIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="248403077" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.001009" asserts="0">
              <properties />
            </test-case>
            <test-case id="1930" name="TestNullByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestNullByteArray" methodname="TestNullByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="2083193130" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.000522" asserts="0">
              <properties />
            </test-case>
            <test-case id="1933" name="TestNullIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestNullIntArray" methodname="TestNullIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="1984738007" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.000455" asserts="0">
              <properties />
            </test-case>
            <test-case id="1931" name="TestSegmentByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestSegmentByteArray" methodname="TestSegmentByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="1065174524" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.002413" asserts="0">
              <properties />
            </test-case>
            <test-case id="1934" name="TestSegmentIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestSegmentIntArray" methodname="TestSegmentIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="1880685651" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.001182" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="1935" name="ArrayWriterTest" fullname="Mirror.Tests.ArrayWriterTest" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.025211" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="1938" name="TestDataByteArray" fullname="Mirror.Tests.ArrayWriterTest.TestDataByteArray" methodname="TestDataByteArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="346649505" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.001573" asserts="0">
              <properties />
            </test-case>
            <test-case id="1941" name="TestDataIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestDataIntArray" methodname="TestDataIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1595943470" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.000693" asserts="0">
              <properties />
            </test-case>
            <test-case id="1937" name="TestEmptyByteArray" fullname="Mirror.Tests.ArrayWriterTest.TestEmptyByteArray" methodname="TestEmptyByteArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1902272419" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.000452" asserts="0">
              <properties />
            </test-case>
            <test-case id="1940" name="TestEmptyIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestEmptyIntArray" methodname="TestEmptyIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1283376777" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.000307" asserts="0">
              <properties />
            </test-case>
            <test-case id="1936" name="TestNullByterray" fullname="Mirror.Tests.ArrayWriterTest.TestNullByterray" methodname="TestNullByterray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1927542502" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.000274" asserts="0">
              <properties />
            </test-case>
            <test-case id="1939" name="TestNullIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestNullIntArray" methodname="TestNullIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1009051583" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.000324" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="1942" name="BasicAuthenticatorTest" fullname="Mirror.Tests.BasicAuthenticatorTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.010270" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="1943" name="AuthRequestMessageTest" fullname="Mirror.Tests.BasicAuthenticatorTest.AuthRequestMessageTest" methodname="AuthRequestMessageTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" seed="1875899439" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.001383" asserts="0">
              <properties />
            </test-case>
            <test-case id="1944" name="AuthResponseMessageTest" fullname="Mirror.Tests.BasicAuthenticatorTest.AuthResponseMessageTest" methodname="AuthResponseMessageTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" seed="364895919" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.000790" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="1945" name="ClientSceneTests" fullname="Mirror.Tests.ClientSceneTests" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="50" result="Failed" site="Child" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:16Z" duration="0.941383" total="50" passed="46" failed="4" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <failure>
              <message><![CDATA[One or more child tests had errors]]></message>
            </failure>
            <test-case id="2002" name="ClearSpawners_ClearsAllDictionary" fullname="Mirror.Tests.ClientSceneTests.ClearSpawners_ClearsAllDictionary" methodname="ClearSpawners_ClearsAllDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="159447636" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.009464" asserts="0">
              <properties />
            </test-case>
            <test-case id="1999" name="ClearSpawners_RemovesAllPrefabsFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClearSpawners_RemovesAllPrefabsFromDictionary" methodname="ClearSpawners_RemovesAllPrefabsFromDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1075445859" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.008802" asserts="0">
              <properties />
            </test-case>
            <test-case id="2000" name="ClearSpawners_RemovesAllSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClearSpawners_RemovesAllSpawnHandlersFromDictionary" methodname="ClearSpawners_RemovesAllSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="728987576" result="Passed" start-time="2020-05-02 11:15:15Z" end-time="2020-05-02 11:15:15Z" duration="0.016728" asserts="0">
              <properties />
            </test-case>
            <test-case id="2001" name="ClearSpawners_RemovesAllUnspawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClearSpawners_RemovesAllUnspawnHandlersFromDictionary" methodname="ClearSpawners_RemovesAllUnspawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="22732386" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.015186" asserts="0">
              <properties />
            </test-case>
            <test-case id="1950" name="GetPrefab_HasOutPrefabWithCorrectGuid" fullname="Mirror.Tests.ClientSceneTests.GetPrefab_HasOutPrefabWithCorrectGuid" methodname="GetPrefab_HasOutPrefabWithCorrectGuid" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1789399950" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.016134" asserts="0">
              <properties />
            </test-case>
            <test-case id="1946" name="GetPrefab_ReturnsFalseForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.GetPrefab_ReturnsFalseForEmptyGuid" methodname="GetPrefab_ReturnsFalseForEmptyGuid" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1753120976" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.014874" asserts="0">
              <properties />
            </test-case>
            <test-case id="1948" name="GetPrefab_ReturnsFalseForPrefabIsNull" fullname="Mirror.Tests.ClientSceneTests.GetPrefab_ReturnsFalseForPrefabIsNull" methodname="GetPrefab_ReturnsFalseForPrefabIsNull" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1577083911" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.017230" asserts="0">
              <properties />
            </test-case>
            <test-case id="1947" name="GetPrefab_ReturnsFalseForPrefabNotFound" fullname="Mirror.Tests.ClientSceneTests.GetPrefab_ReturnsFalseForPrefabNotFound" methodname="GetPrefab_ReturnsFalseForPrefabNotFound" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="254580307" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.014856" asserts="0">
              <properties />
            </test-case>
            <test-case id="1949" name="GetPrefab_ReturnsTrueWhenPrefabIsFound" fullname="Mirror.Tests.ClientSceneTests.GetPrefab_ReturnsTrueWhenPrefabIsFound" methodname="GetPrefab_ReturnsTrueWhenPrefabIsFound" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1508351793" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.026404" asserts="0">
              <properties />
            </test-case>
            <test-suite type="ParameterizedMethod" id="1953" name="RegisterPrefab_Prefab_AddsPrefabToDictionary" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="2" result="Failed" site="Child" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.043891" total="2" passed="1" failed="1" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <failure>
                <message><![CDATA[One or more child tests had errors]]></message>
              </failure>
              <test-case id="1951" name="RegisterPrefab_Prefab_AddsPrefabToDictionary(False)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_AddsPrefabToDictionary(False)" methodname="RegisterPrefab_Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="331957228" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011749" asserts="0">
                <properties />
              </test-case>
              <test-case id="1952" name="RegisterPrefab_Prefab_AddsPrefabToDictionary(True)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_AddsPrefabToDictionary(True)" methodname="RegisterPrefab_Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="361323665" result="Failed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.019713" asserts="0">
                <properties />
                <failure>
                  <message><![CDATA[  Expected: True
  But was:  False
]]></message>
                  <stack-trace><![CDATA[at Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_AddsPrefabToDictionary (System.Boolean setGuid) [0x00029] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/ClientSceneTests.cs:137
]]></stack-trace>
                </failure>
                <output><![CDATA[SetDynamicAssetId object ValidPrefabForClientScene already has an assetId 33169286da0313d45ab5bfccc6cf3775, new asset id 5794128cdfda04542985151f82990d05
]]></output>
              </test-case>
            </test-suite>
            <test-case id="1961" name="RegisterPrefab_Prefab_ErrorForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorForEmptyGuid" methodname="RegisterPrefab_Prefab_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1578456311" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.036964" asserts="0">
              <properties />
              <output><![CDATA[Can not Register 'Runtime GameObject' because it had empty assetid. If this is a scene Object use RegisterSpawnHandler instead
]]></output>
            </test-case>
            <test-suite type="ParameterizedMethod" id="1957" name="RegisterPrefab_Prefab_ErrorForNullPrefab" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.024220" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="1955" name="RegisterPrefab_Prefab_ErrorForNullPrefab(False)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorForNullPrefab(False)" methodname="RegisterPrefab_Prefab_ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="504154753" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.005490" asserts="0">
                <properties />
                <output><![CDATA[Could not register prefab because it was null
]]></output>
              </test-case>
              <test-case id="1956" name="RegisterPrefab_Prefab_ErrorForNullPrefab(True)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorForNullPrefab(True)" methodname="RegisterPrefab_Prefab_ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1013288978" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011329" asserts="0">
                <properties />
                <output><![CDATA[Could not register prefab because it was null
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="1960" name="RegisterPrefab_Prefab_ErrorForPrefabWithoutNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.045065" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="1958" name="RegisterPrefab_Prefab_ErrorForPrefabWithoutNetworkIdentity(False)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorForPrefabWithoutNetworkIdentity(False)" methodname="RegisterPrefab_Prefab_ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="2145702231" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.009747" asserts="0">
                <properties />
                <output><![CDATA[Could not register 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
              </test-case>
              <test-case id="1959" name="RegisterPrefab_Prefab_ErrorForPrefabWithoutNetworkIdentity(True)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorForPrefabWithoutNetworkIdentity(True)" methodname="RegisterPrefab_Prefab_ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="669405601" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.017872" asserts="0">
                <properties />
                <output><![CDATA[Could not register 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="1966" name="RegisterPrefab_Prefab_ErrorIfPrefabHadSceneId" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.037020" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="1964" name="RegisterPrefab_Prefab_ErrorIfPrefabHadSceneId(False)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorIfPrefabHadSceneId(False)" methodname="RegisterPrefab_Prefab_ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="2124470693" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.010858" asserts="0">
                <properties />
                <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
              </test-case>
              <test-case id="1965" name="RegisterPrefab_Prefab_ErrorIfPrefabHadSceneId(True)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_ErrorIfPrefabHadSceneId(True)" methodname="RegisterPrefab_Prefab_ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="564468102" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.018562" asserts="0">
                <properties />
                <output><![CDATA[SetDynamicAssetId object ValidPrefabForClientScene(Clone) already has an assetId 33169286da0313d45ab5bfccc6cf3775, new asset id 5794128cdfda04542985151f82990d05
Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="1975" name="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInHandlersDictionary" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="2" result="Failed" site="Child" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.036481" total="2" passed="1" failed="1" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <failure>
                <message><![CDATA[One or more child tests had errors]]></message>
              </failure>
              <test-case id="1973" name="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInHandlersDictionary(False,&quot;&quot;)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInHandlersDictionary(False,&quot;&quot;)" methodname="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1964642555" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011398" asserts="0">
                <properties />
                <output><![CDATA[Adding prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' when spawnHandlers with same assetId already exists.
]]></output>
              </test-case>
              <test-case id="1974" name="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInHandlersDictionary(True,&quot;5794128cdfda04542985151f82990d05&quot;)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInHandlersDictionary(True,&quot;5794128cdfda04542985151f82990d05&quot;)" methodname="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="113022252" result="Failed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.013664" asserts="0">
                <properties />
                <failure>
                  <message><![CDATA[Expected log did not appear: [Warning] Adding prefab 'ValidPrefabForClientScene' with assetId '5794128c-dfda-0454-2985-151f82990d05' when spawnHandlers with same assetId already exists.]]></message>
                </failure>
                <output><![CDATA[SetDynamicAssetId object ValidPrefabForClientScene already has an assetId 33169286da0313d45ab5bfccc6cf3775, new asset id 5794128cdfda04542985151f82990d05
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="1972" name="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="2" result="Failed" site="Child" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.054736" total="2" passed="1" failed="1" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <failure>
                <message><![CDATA[One or more child tests had errors]]></message>
              </failure>
              <test-case id="1970" name="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(False,&quot;&quot;)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(False,&quot;&quot;)" methodname="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1710247051" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.010981" asserts="0">
                <properties />
                <output><![CDATA[Replacing existing prefab with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'. Old prefab 'ValidPrefabForClientScene', New prefab 'ValidPrefabForClientScene'
]]></output>
              </test-case>
              <test-case id="1971" name="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(True,&quot;5794128cdfda04542985151f82990d05&quot;)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(True,&quot;5794128cdfda04542985151f82990d05&quot;)" methodname="RegisterPrefab_Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="2073264884" result="Failed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.035065" asserts="0">
                <properties />
                <failure>
                  <message><![CDATA[Expected log did not appear: [Warning] Replacing existing prefab with assetId '5794128c-dfda-0454-2985-151f82990d05'. Old prefab 'ValidPrefabForClientScene', New prefab 'ValidPrefabForClientScene']]></message>
                </failure>
                <output><![CDATA[SetDynamicAssetId object ValidPrefabForClientScene already has an assetId 33169286da0313d45ab5bfccc6cf3775, new asset id 5794128cdfda04542985151f82990d05
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="1969" name="RegisterPrefab_Prefab_WarningForNetworkIdentityInChildren" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.031287" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="1967" name="RegisterPrefab_Prefab_WarningForNetworkIdentityInChildren(False)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForNetworkIdentityInChildren(False)" methodname="RegisterPrefab_Prefab_WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="943938906" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.007065" asserts="0">
                <properties />
                <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
              </test-case>
              <test-case id="1968" name="RegisterPrefab_Prefab_WarningForNetworkIdentityInChildren(True)" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_Prefab_WarningForNetworkIdentityInChildren(True)" methodname="RegisterPrefab_Prefab_WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1625682356" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011872" asserts="0">
                <properties />
                <output><![CDATA[SetDynamicAssetId object PrefabWithChildrenForClientScene already has an assetId a78e009e3f2dee44e8859516974ede43, new asset id 5794128cdfda04542985151f82990d05
Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
              </test-case>
            </test-suite>
            <test-case id="1962" name="RegisterPrefab_PrefabNewGuid_AddsRuntimeObjectToDictionary" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_PrefabNewGuid_AddsRuntimeObjectToDictionary" methodname="RegisterPrefab_PrefabNewGuid_AddsRuntimeObjectToDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1649543593" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011375" asserts="0">
              <properties />
            </test-case>
            <test-case id="1954" name="RegisterPrefab_PrefabNewGuid_ChangePrefabsAssetId" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_PrefabNewGuid_ChangePrefabsAssetId" methodname="RegisterPrefab_PrefabNewGuid_ChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1226042156" result="Failed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.015026" asserts="0">
              <properties />
              <failure>
                <message><![CDATA[  Expected: True
  But was:  False
]]></message>
                <stack-trace><![CDATA[at Mirror.Tests.ClientSceneTests.RegisterPrefab_PrefabNewGuid_ChangePrefabsAssetId () [0x0001a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/ClientSceneTests.cs:147
]]></stack-trace>
              </failure>
              <output><![CDATA[SetDynamicAssetId object ValidPrefabForClientScene already has an assetId 33169286da0313d45ab5bfccc6cf3775, new asset id 5794128cdfda04542985151f82990d05
]]></output>
            </test-case>
            <test-case id="1963" name="RegisterPrefab_PrefabNewGuid_ErrorForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.RegisterPrefab_PrefabNewGuid_ErrorForEmptyGuid" methodname="RegisterPrefab_PrefabNewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1009459744" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.016546" asserts="0">
              <properties />
              <output><![CDATA[Could not register 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
            </test-case>
            <test-case id="1981" name="RegisterSpawnHandler_SpawnDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnDelegate_AddsHandlerToSpawnHandlers" methodname="RegisterSpawnHandler_SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="882093030" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.014877" asserts="0">
              <properties />
            </test-case>
            <test-case id="1982" name="RegisterSpawnHandler_SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" methodname="RegisterSpawnHandler_SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="32418400" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.014597" asserts="0">
              <properties />
            </test-case>
            <test-case id="1983" name="RegisterSpawnHandler_SpawnDelegate_AddsHandlerToUnSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnDelegate_AddsHandlerToUnSpawnHandlers" methodname="RegisterSpawnHandler_SpawnDelegate_AddsHandlerToUnSpawnHandlers" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1029120772" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.016429" asserts="0">
              <properties />
            </test-case>
            <test-case id="1986" name="RegisterSpawnHandler_SpawnDelegate_ErrorWhenAssetIdIsEmpty" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnDelegate_ErrorWhenAssetIdIsEmpty" methodname="RegisterSpawnHandler_SpawnDelegate_ErrorWhenAssetIdIsEmpty" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1173409302" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.020816" asserts="0">
              <properties />
              <output><![CDATA[Can not Register SpawnHandler for empty Guid
]]></output>
            </test-case>
            <test-case id="1988" name="RegisterSpawnHandler_SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" methodname="RegisterSpawnHandler_SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1943988084" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011479" asserts="0">
              <properties />
              <output><![CDATA[assetId '614e5332-aaaa-4ca7-950a-c5ee3327168f' is already used by prefab 'ValidPrefabForClientScene'
]]></output>
            </test-case>
            <test-case id="1984" name="RegisterSpawnHandler_SpawnDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnDelegate_ErrorWhenSpawnHandlerIsNull" methodname="RegisterSpawnHandler_SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="485904077" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.017699" asserts="0">
              <properties />
              <output><![CDATA[Can not Register null SpawnHandler for af6712b1-3264-43b3-a787-da0fdf74a598
]]></output>
            </test-case>
            <test-case id="1985" name="RegisterSpawnHandler_SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" methodname="RegisterSpawnHandler_SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="155736263" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.012950" asserts="0">
              <properties />
              <output><![CDATA[Can not Register null UnSpawnHandler for 200ddb1f-b655-4dac-be92-60e8dbbe32eb
]]></output>
            </test-case>
            <test-case id="1987" name="RegisterSpawnHandler_SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" methodname="RegisterSpawnHandler_SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="413211981" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.017359" asserts="0">
              <properties />
              <output><![CDATA[Replacing existing spawnHandlers for 7b755899-9152-4c76-ab6c-0feeb8f18ea2
]]></output>
            </test-case>
            <test-case id="1989" name="RegisterSpawnHandler_SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" methodname="RegisterSpawnHandler_SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="398510195" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.010748" asserts="0">
              <properties />
            </test-case>
            <test-case id="1990" name="RegisterSpawnHandler_SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" methodname="RegisterSpawnHandler_SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="512633675" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.016864" asserts="0">
              <properties />
            </test-case>
            <test-case id="1993" name="RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" methodname="RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1149209448" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.014902" asserts="0">
              <properties />
              <output><![CDATA[Can not Register SpawnHandler for empty Guid
]]></output>
            </test-case>
            <test-case id="1995" name="RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" methodname="RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1237460584" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.016139" asserts="0">
              <properties />
              <output><![CDATA[assetId '3f748397-2ffe-4a36-a6ed-d987700f6b0e' is already used by prefab 'ValidPrefabForClientScene'
]]></output>
            </test-case>
            <test-case id="1991" name="RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" methodname="RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="676374821" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.015718" asserts="0">
              <properties />
              <output><![CDATA[Can not Register null SpawnHandler for 00fb2437-d2f5-435f-9eae-d51f255108e9
]]></output>
            </test-case>
            <test-case id="1992" name="RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" methodname="RegisterSpawnHandler_SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="166239680" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.015484" asserts="0">
              <properties />
              <output><![CDATA[Can not Register null UnSpawnHandler for 6a31a868-b3e0-468d-894f-a17b65bd97e0
]]></output>
            </test-case>
            <test-case id="1994" name="RegisterSpawnHandler_SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" fullname="Mirror.Tests.ClientSceneTests.RegisterSpawnHandler_SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" methodname="RegisterSpawnHandler_SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="899521285" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.015144" asserts="0">
              <properties />
              <output><![CDATA[Replacing existing spawnHandlers for 0fe08cb0-0a86-4ce6-b658-07a6439b7846
]]></output>
            </test-case>
            <test-case id="1980" name="UnregisterPrefab_ErrorWhenPrefabHasNoNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.UnregisterPrefab_ErrorWhenPrefabHasNoNetworkIdentity" methodname="UnregisterPrefab_ErrorWhenPrefabHasNoNetworkIdentity" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1699451903" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.017702" asserts="0">
              <properties />
              <output><![CDATA[Could not unregister 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
            </test-case>
            <test-case id="1979" name="UnregisterPrefab_ErrorWhenPrefabIsNull" fullname="Mirror.Tests.ClientSceneTests.UnregisterPrefab_ErrorWhenPrefabIsNull" methodname="UnregisterPrefab_ErrorWhenPrefabIsNull" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1489491028" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.014873" asserts="0">
              <properties />
              <output><![CDATA[Could not unregister prefab because it was null
]]></output>
            </test-case>
            <test-case id="1976" name="UnregisterPrefab_RemovesPrefabFromDictionary" fullname="Mirror.Tests.ClientSceneTests.UnregisterPrefab_RemovesPrefabFromDictionary" methodname="UnregisterPrefab_RemovesPrefabFromDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="611453781" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.015247" asserts="0">
              <properties />
            </test-case>
            <test-case id="1977" name="UnregisterPrefab_RemovesSpawnHandlerFromDictionary" fullname="Mirror.Tests.ClientSceneTests.UnregisterPrefab_RemovesSpawnHandlerFromDictionary" methodname="UnregisterPrefab_RemovesSpawnHandlerFromDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="1248436878" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.024586" asserts="0">
              <properties />
            </test-case>
            <test-case id="1978" name="UnregisterPrefab_RemovesUnSpawnHandlerFromDictionary" fullname="Mirror.Tests.ClientSceneTests.UnregisterPrefab_RemovesUnSpawnHandlerFromDictionary" methodname="UnregisterPrefab_RemovesUnSpawnHandlerFromDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="319790209" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.015179" asserts="0">
              <properties />
            </test-case>
            <test-case id="1998" name="UnregisterSpawnHandler_DoesNotRemovePrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.UnregisterSpawnHandler_DoesNotRemovePrefabDictionary" methodname="UnregisterSpawnHandler_DoesNotRemovePrefabDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="126335504" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011941" asserts="0">
              <properties />
            </test-case>
            <test-case id="1996" name="UnregisterSpawnHandler_RemovesSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.UnregisterSpawnHandler_RemovesSpawnHandlersFromDictionary" methodname="UnregisterSpawnHandler_RemovesSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="702617217" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011855" asserts="0">
              <properties />
            </test-case>
            <test-case id="1997" name="UnregisterSpawnHandler_RemovesUnSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.UnregisterSpawnHandler_RemovesUnSpawnHandlersFromDictionary" methodname="UnregisterSpawnHandler_RemovesUnSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests" runstate="Runnable" seed="906342452" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.014735" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2003" name="CustomAttrributeTest" fullname="Mirror.Tests.CustomAttrributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.011963" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2006" name="ClientRPCAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.ClientRPCAttributeTest" methodname="ClientRPCAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1182560672" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.000467" asserts="0">
              <properties />
            </test-case>
            <test-case id="2005" name="CommandAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.CommandAttributeTest" methodname="CommandAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1554141726" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.000337" asserts="0">
              <properties />
            </test-case>
            <test-case id="2008" name="SyncEventAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.SyncEventAttributeTest" methodname="SyncEventAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1847415766" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.000372" asserts="0">
              <properties />
            </test-case>
            <test-case id="2004" name="SyncVarAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.SyncVarAttributeTest" methodname="SyncVarAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1684458275" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.000363" asserts="0">
              <properties />
            </test-case>
            <test-case id="2007" name="TargetRPCAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.TargetRPCAttributeTest" methodname="TargetRPCAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1564100883" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.000365" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2009" name="CustomRWTest" fullname="Mirror.Tests.CustomRWTest" classname="Mirror.Tests.CustomRWTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.010020" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2010" name="TestCustomRW" fullname="Mirror.Tests.CustomRWTest.TestCustomRW" methodname="TestCustomRW" classname="Mirror.Tests.CustomRWTest" runstate="Runnable" seed="1165886769" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:16Z" duration="0.000762" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2011" name="EnumReadWriteTests" fullname="Mirror.Tests.EnumReadWriteTests" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-05-02 11:15:16Z" end-time="2020-05-02 11:15:17Z" duration="0.008459" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2012" name="ByteIsSentForByteEnum" fullname="Mirror.Tests.EnumReadWriteTests.ByteIsSentForByteEnum" methodname="ByteIsSentForByteEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="2109634863" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000503" asserts="0">
              <properties />
            </test-case>
            <test-case id="2014" name="CustomWriterIsUsedForEnum" fullname="Mirror.Tests.EnumReadWriteTests.CustomWriterIsUsedForEnum" methodname="CustomWriterIsUsedForEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="1979817418" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000896" asserts="0">
              <properties />
            </test-case>
            <test-case id="2013" name="ShortIsSentForShortEnum" fullname="Mirror.Tests.EnumReadWriteTests.ShortIsSentForShortEnum" methodname="ShortIsSentForShortEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="650389367" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000421" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2015" name="ExponentialMovingAverageTest" fullname="Mirror.Tests.ExponentialMovingAverageTest" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.010434" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2016" name="TestInitial" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestInitial" methodname="TestInitial" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="625441458" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001271" asserts="0">
              <properties />
            </test-case>
            <test-case id="2017" name="TestMovingAverage" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestMovingAverage" methodname="TestMovingAverage" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="365115444" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000551" asserts="0">
              <properties />
            </test-case>
            <test-case id="2018" name="TestVar" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestVar" methodname="TestVar" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="1734152909" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000296" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2019" name="FallbackTransportTest" fullname="Mirror.Tests.FallbackTransportTest" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.378323" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2020" name="TestAvailable" fullname="Mirror.Tests.FallbackTransportTest.TestAvailable" methodname="TestAvailable" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1851477418" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.130992" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2026" name="TestClient1Connected" fullname="Mirror.Tests.FallbackTransportTest.TestClient1Connected" methodname="TestClient1Connected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="310814661" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.035381" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2027" name="TestClient2Connected" fullname="Mirror.Tests.FallbackTransportTest.TestClient2Connected" methodname="TestClient2Connected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1163573528" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.042537" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2025" name="TestClientSend" fullname="Mirror.Tests.FallbackTransportTest.TestClientSend" methodname="TestClientSend" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="819085485" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.021689" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2022" name="TestConnect" fullname="Mirror.Tests.FallbackTransportTest.TestConnect" methodname="TestConnect" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1938656639" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.017653" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2023" name="TestConnected" fullname="Mirror.Tests.FallbackTransportTest.TestConnected" methodname="TestConnected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1497610773" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.016781" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2024" name="TestDisconnect" fullname="Mirror.Tests.FallbackTransportTest.TestDisconnect" methodname="TestDisconnect" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="322307773" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.016546" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2021" name="TestNotAvailable" fullname="Mirror.Tests.FallbackTransportTest.TestNotAvailable" methodname="TestNotAvailable" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1184661125" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014559" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2028" name="TestServerConnected" fullname="Mirror.Tests.FallbackTransportTest.TestServerConnected" methodname="TestServerConnected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="196497343" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.058208" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2029" name="LocalConnectionBufferTest" fullname="Mirror.Tests.LocalConnectionBufferTest" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.096591" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2032" name="BufferCanWriteAndReadPackages" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferCanWriteAndReadPackages" methodname="BufferCanWriteAndReadPackages" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1813686043" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.005236" asserts="0">
              <properties />
            </test-case>
            <test-case id="2034" name="BufferCanWriteReadMorePackageAfterCallingReset" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferCanWriteReadMorePackageAfterCallingReset" methodname="BufferCanWriteReadMorePackageAfterCallingReset" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1139044391" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.013442" asserts="0">
              <properties />
            </test-case>
            <test-case id="2031" name="BufferHasNoPacketsAfterWriteAndReading" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferHasNoPacketsAfterWriteAndReading" methodname="BufferHasNoPacketsAfterWriteAndReading" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="89845935" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.016178" asserts="0">
              <properties />
            </test-case>
            <test-case id="2030" name="BufferHasPacketsAfterWriter" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferHasPacketsAfterWriter" methodname="BufferHasPacketsAfterWriter" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1188110098" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.017693" asserts="0">
              <properties />
            </test-case>
            <test-case id="2033" name="BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" methodname="BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1018376384" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014995" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2035" name="LocalConnectionTest" fullname="Mirror.Tests.LocalConnectionTest" classname="Mirror.Tests.LocalConnectionTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.015470" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2036" name="ClientToServerFailTest" fullname="Mirror.Tests.LocalConnectionTest.ClientToServerFailTest" methodname="ClientToServerFailTest" classname="Mirror.Tests.LocalConnectionTest" runstate="Runnable" seed="950761961" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.010615" asserts="0">
              <properties />
              <output><![CDATA[LocalConnection.SendBytes cannot send zero bytes
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2037" name="LogFactoryTests" fullname="Mirror.Tests.LogFactoryTests" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.018781" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2039" name="DifferentClassDifferentLogger" fullname="Mirror.Tests.LogFactoryTests.DifferentClassDifferentLogger" methodname="DifferentClassDifferentLogger" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="1243229847" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000785" asserts="0">
              <properties />
            </test-case>
            <test-case id="2041" name="LogDebugFull" fullname="Mirror.Tests.LogFactoryTests.LogDebugFull" methodname="LogDebugFull" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="1232289003" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.007077" asserts="0">
              <properties />
            </test-case>
            <test-case id="2040" name="LogDebugIgnore" fullname="Mirror.Tests.LogFactoryTests.LogDebugIgnore" methodname="LogDebugIgnore" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="2116573471" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001168" asserts="0">
              <properties />
            </test-case>
            <test-case id="2038" name="SameClassSameLogger" fullname="Mirror.Tests.LogFactoryTests.SameClassSameLogger" methodname="SameClassSameLogger" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="278326975" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000388" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2042" name="MessageBaseTests" fullname="Mirror.Tests.MessageBaseTests" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.010754" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2043" name="Roundtrip" fullname="Mirror.Tests.MessageBaseTests.Roundtrip" methodname="Roundtrip" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" seed="400275681" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001222" asserts="0">
              <properties />
            </test-case>
            <test-case id="2044" name="WovenSerializationBodyRoundtrip" fullname="Mirror.Tests.MessageBaseTests.WovenSerializationBodyRoundtrip" methodname="WovenSerializationBodyRoundtrip" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" seed="162658440" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001063" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2045" name="MessageInheritanceTests" fullname="Mirror.Tests.MessageInheritanceTests" classname="Mirror.Tests.MessageInheritanceTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.008240" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2046" name="Roundtrip" fullname="Mirror.Tests.MessageInheritanceTests.Roundtrip" methodname="Roundtrip" classname="Mirror.Tests.MessageInheritanceTests" runstate="Runnable" seed="1989801176" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000668" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2047" name="MessagePackerTest" fullname="Mirror.Tests.MessagePackerTest" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.025712" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2048" name="TestPacking" fullname="Mirror.Tests.MessagePackerTest.TestPacking" methodname="TestPacking" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="830432620" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001622" asserts="0">
              <properties />
            </test-case>
            <test-case id="2050" name="TestUnpackIdMismatch" fullname="Mirror.Tests.MessagePackerTest.TestUnpackIdMismatch" methodname="TestUnpackIdMismatch" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="281860135" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000631" asserts="0">
              <properties />
            </test-case>
            <test-case id="2051" name="TestUnpackMessageNonGeneric" fullname="Mirror.Tests.MessagePackerTest.TestUnpackMessageNonGeneric" methodname="TestUnpackMessageNonGeneric" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="1100891424" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001036" asserts="0">
              <properties />
            </test-case>
            <test-case id="2052" name="UnpackInvalidMessage" fullname="Mirror.Tests.MessagePackerTest.UnpackInvalidMessage" methodname="UnpackInvalidMessage" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="117183177" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000911" asserts="0">
              <properties />
            </test-case>
            <test-case id="2049" name="UnpackWrongMessage" fullname="Mirror.Tests.MessagePackerTest.UnpackWrongMessage" methodname="UnpackWrongMessage" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="1835641225" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000840" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2053" name="MessageTests" fullname="Mirror.Tests.MessageTests" classname="Mirror.Tests.MessageTests" runstate="Runnable" testcasecount="17" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.042091" total="17" passed="17" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2054" name="CommandMessageTest" fullname="Mirror.Tests.MessageTests.CommandMessageTest" methodname="CommandMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1680351657" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001950" asserts="0">
              <properties />
            </test-case>
            <test-case id="2055" name="ConnectMessageTest" fullname="Mirror.Tests.MessageTests.ConnectMessageTest" methodname="ConnectMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="2140992586" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001527" asserts="0">
              <properties />
            </test-case>
            <test-case id="2056" name="DisconnectMessageTest" fullname="Mirror.Tests.MessageTests.DisconnectMessageTest" methodname="DisconnectMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1488595947" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000970" asserts="0">
              <properties />
            </test-case>
            <test-case id="2057" name="ErrorMessageTest" fullname="Mirror.Tests.MessageTests.ErrorMessageTest" methodname="ErrorMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1498786814" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001112" asserts="0">
              <properties />
            </test-case>
            <test-case id="2058" name="NetworkPingMessageTest" fullname="Mirror.Tests.MessageTests.NetworkPingMessageTest" methodname="NetworkPingMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1553775093" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001084" asserts="0">
              <properties />
            </test-case>
            <test-case id="2059" name="NetworkPongMessageTest" fullname="Mirror.Tests.MessageTests.NetworkPongMessageTest" methodname="NetworkPongMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1003825577" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001026" asserts="0">
              <properties />
            </test-case>
            <test-case id="2060" name="NotReadyMessageTest" fullname="Mirror.Tests.MessageTests.NotReadyMessageTest" methodname="NotReadyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1972392773" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001152" asserts="0">
              <properties />
            </test-case>
            <test-case id="2061" name="ObjectDestroyMessageTest" fullname="Mirror.Tests.MessageTests.ObjectDestroyMessageTest" methodname="ObjectDestroyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1840527792" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001066" asserts="0">
              <properties />
            </test-case>
            <test-case id="2062" name="ObjectHideMessageTest" fullname="Mirror.Tests.MessageTests.ObjectHideMessageTest" methodname="ObjectHideMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="362540767" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001091" asserts="0">
              <properties />
            </test-case>
            <test-case id="2063" name="ObjectSpawnFinishedMessageTest" fullname="Mirror.Tests.MessageTests.ObjectSpawnFinishedMessageTest" methodname="ObjectSpawnFinishedMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1548080105" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001129" asserts="0">
              <properties />
            </test-case>
            <test-case id="2064" name="ObjectSpawnStartedMessageTest" fullname="Mirror.Tests.MessageTests.ObjectSpawnStartedMessageTest" methodname="ObjectSpawnStartedMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="494781845" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001079" asserts="0">
              <properties />
            </test-case>
            <test-case id="2065" name="ReadyMessageTest" fullname="Mirror.Tests.MessageTests.ReadyMessageTest" methodname="ReadyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="902030934" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001121" asserts="0">
              <properties />
            </test-case>
            <test-case id="2066" name="RemovePlayerMessageTest" fullname="Mirror.Tests.MessageTests.RemovePlayerMessageTest" methodname="RemovePlayerMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1169294843" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001209" asserts="0">
              <properties />
            </test-case>
            <test-case id="2067" name="RpcMessageTest" fullname="Mirror.Tests.MessageTests.RpcMessageTest" methodname="RpcMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="767554874" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001339" asserts="0">
              <properties />
            </test-case>
            <test-case id="2068" name="SpawnMessageTest" fullname="Mirror.Tests.MessageTests.SpawnMessageTest" methodname="SpawnMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="289115573" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.002921" asserts="0">
              <properties />
            </test-case>
            <test-case id="2069" name="SyncEventMessageTest" fullname="Mirror.Tests.MessageTests.SyncEventMessageTest" methodname="SyncEventMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="225408913" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001341" asserts="0">
              <properties />
            </test-case>
            <test-case id="2070" name="UpdateVarsMessageTest" fullname="Mirror.Tests.MessageTests.UpdateVarsMessageTest" methodname="UpdateVarsMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1658398537" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001185" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2071" name="MultiplexTest" fullname="Mirror.Tests.MultiplexTest" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.206279" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2072" name="TestAvailable" fullname="Mirror.Tests.MultiplexTest.TestAvailable" methodname="TestAvailable" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="924600946" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.020392" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2080" name="TestClient1Connected" fullname="Mirror.Tests.MultiplexTest.TestClient1Connected" methodname="TestClient1Connected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="220183440" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.017733" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2081" name="TestClient2Connected" fullname="Mirror.Tests.MultiplexTest.TestClient2Connected" methodname="TestClient2Connected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="654975336" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014678" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2079" name="TestClientSend" fullname="Mirror.Tests.MultiplexTest.TestClientSend" methodname="TestClientSend" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1084807924" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014477" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2074" name="TestConnect" fullname="Mirror.Tests.MultiplexTest.TestConnect" methodname="TestConnect" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1590799057" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014530" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2077" name="TestConnected" fullname="Mirror.Tests.MultiplexTest.TestConnected" methodname="TestConnected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1773713771" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014910" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2075" name="TestConnectFirstUri" fullname="Mirror.Tests.MultiplexTest.TestConnectFirstUri" methodname="TestConnectFirstUri" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="664331676" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014678" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2076" name="TestConnectSecondUri" fullname="Mirror.Tests.MultiplexTest.TestConnectSecondUri" methodname="TestConnectSecondUri" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="119412633" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.018662" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2078" name="TestDisconnect" fullname="Mirror.Tests.MultiplexTest.TestDisconnect" methodname="TestDisconnect" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1202094786" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014498" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2073" name="TestNotAvailable" fullname="Mirror.Tests.MultiplexTest.TestNotAvailable" methodname="TestNotAvailable" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1853113549" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.015029" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2082" name="TestServerConnected" fullname="Mirror.Tests.MultiplexTest.TestServerConnected" methodname="TestServerConnected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="516130533" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.018718" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2138" name="NetworkBehaviourHookGuardTester" fullname="Mirror.Tests.NetworkBehaviourHookGuardTester" classname="Mirror.Tests.NetworkBehaviourHookGuardTester" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.028701" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            <test-case id="2139" name="HookGuard" fullname="Mirror.Tests.NetworkBehaviourHookGuardTester.HookGuard" methodname="HookGuard" classname="Mirror.Tests.NetworkBehaviourHookGuardTester" runstate="Runnable" seed="1811711385" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.002636" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2140" name="NetworkBehaviourInitSyncObjectTester" fullname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" classname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.015287" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            <test-case id="2141" name="InitSyncObject" fullname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester.InitSyncObject" methodname="InitSyncObject" classname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" runstate="Runnable" seed="57288226" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.003467" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2467" name="NetworkBehaviourSerialize" fullname="Mirror.Tests.NetworkBehaviourSerialize" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:18Z" duration="0.176678" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2435" name="NetworkBehaviourSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:18Z" duration="0.133842" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="2438" name="BehaviourWithSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.014846" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2436" name="BehaviourWithSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest(True)" methodname="BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="23427280" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.006497" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2437" name="BehaviourWithSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest(False)" methodname="BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="163885682" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.002457" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2453" name="BehaviourWithSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.012688" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2451" name="BehaviourWithSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest(True)" methodname="BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1404471128" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.001889" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2452" name="BehaviourWithSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest(False)" methodname="BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="304225472" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:17Z" duration="0.000658" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2441" name="OverrideBehaviourFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:17Z" end-time="2020-05-02 11:15:18Z" duration="0.012253" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2439" name="OverrideBehaviourFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest(True)" methodname="OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1312704526" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.001812" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2440" name="OverrideBehaviourFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest(False)" methodname="OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="2040496332" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.000691" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2456" name="OverrideBehaviourFromSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.014026" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2454" name="OverrideBehaviourFromSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest(True)" methodname="OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1269560309" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.001668" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2455" name="OverrideBehaviourFromSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest(False)" methodname="OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="403667936" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.000721" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2444" name="OverrideBehaviourWithSyncVarFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.016571" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2442" name="OverrideBehaviourWithSyncVarFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest(True)" methodname="OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="427942205" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.001887" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2443" name="OverrideBehaviourWithSyncVarFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest(False)" methodname="OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="280429088" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.000690" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2459" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.012466" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2457" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(True)" methodname="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1567688999" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.001856" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2458" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(False)" methodname="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1368419987" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.000669" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2450" name="SubClassFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.014501" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2448" name="SubClassFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest(True)" methodname="SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="2031412433" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.003249" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2449" name="SubClassFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest(False)" methodname="SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1108261776" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.000709" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2447" name="SubClassTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.010792" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2445" name="SubClassTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest(True)" methodname="SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1316209165" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.001911" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2446" name="SubClassTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest(False)" methodname="SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="184285090" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.000676" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2083" name="NetworkBehaviourTests" fullname="Mirror.Tests.NetworkBehaviourTests" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" testcasecount="54" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:19Z" duration="0.978389" total="54" passed="54" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2131" name="ClearAllDirtyBitsClearsSyncObjectsDirtyBits" fullname="Mirror.Tests.NetworkBehaviourTests.ClearAllDirtyBitsClearsSyncObjectsDirtyBits" methodname="ClearAllDirtyBitsClearsSyncObjectsDirtyBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="663751221" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.012899" asserts="0">
              <properties />
            </test-case>
            <test-case id="2130" name="ClearAllDirtyBitsClearsSyncVarDirtyBits" fullname="Mirror.Tests.NetworkBehaviourTests.ClearAllDirtyBitsClearsSyncVarDirtyBits" methodname="ClearAllDirtyBitsClearsSyncVarDirtyBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="375301836" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.023375" asserts="0">
              <properties />
            </test-case>
            <test-case id="2090" name="ComponentIndex" fullname="Mirror.Tests.NetworkBehaviourTests.ComponentIndex" methodname="ComponentIndex" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1452328026" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.009566" asserts="0">
              <properties />
            </test-case>
            <test-case id="2132" name="DirtyObjectBits" fullname="Mirror.Tests.NetworkBehaviourTests.DirtyObjectBits" methodname="DirtyObjectBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="292657037" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.020555" asserts="0">
              <properties />
            </test-case>
            <test-case id="2100" name="GetDelegate" fullname="Mirror.Tests.NetworkBehaviourTests.GetDelegate" methodname="GetDelegate" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2055043195" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015076" asserts="0">
              <properties />
            </test-case>
            <test-case id="2121" name="GetSyncVarGameObjectOnClient" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnClient" methodname="GetSyncVarGameObjectOnClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1139004640" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015053" asserts="0">
              <properties />
            </test-case>
            <test-case id="2122" name="GetSyncVarGameObjectOnClientNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnClientNull" methodname="GetSyncVarGameObjectOnClientNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="991290600" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.014608" asserts="0">
              <properties />
            </test-case>
            <test-case id="2119" name="GetSyncVarGameObjectOnServer" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnServer" methodname="GetSyncVarGameObjectOnServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="35809006" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015974" asserts="0">
              <properties />
            </test-case>
            <test-case id="2120" name="GetSyncVarGameObjectOnServerNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnServerNull" methodname="GetSyncVarGameObjectOnServerNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="905302857" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.018109" asserts="0">
              <properties />
            </test-case>
            <test-case id="2128" name="GetSyncVarNetworkIdentityOnClient" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnClient" methodname="GetSyncVarNetworkIdentityOnClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="136163171" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015094" asserts="0">
              <properties />
            </test-case>
            <test-case id="2129" name="GetSyncVarNetworkIdentityOnClientNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnClientNull" methodname="GetSyncVarNetworkIdentityOnClientNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="447142918" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.011635" asserts="0">
              <properties />
            </test-case>
            <test-case id="2126" name="GetSyncVarNetworkIdentityOnServer" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnServer" methodname="GetSyncVarNetworkIdentityOnServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="173565916" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.019711" asserts="0">
              <properties />
            </test-case>
            <test-case id="2127" name="GetSyncVarNetworkIdentityOnServerNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnServerNull" methodname="GetSyncVarNetworkIdentityOnServerNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="897876479" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.011534" asserts="0">
              <properties />
            </test-case>
            <test-case id="2089" name="HasIdentitysConnectionToClient" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysConnectionToClient" methodname="HasIdentitysConnectionToClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2004027702" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.019258" asserts="0">
              <properties />
            </test-case>
            <test-case id="2088" name="HasIdentitysConnectionToServer" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysConnectionToServer" methodname="HasIdentitysConnectionToServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="866512847" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.013036" asserts="0">
              <properties />
            </test-case>
            <test-case id="2087" name="HasIdentitysNetId" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysNetId" methodname="HasIdentitysNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1395993685" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.017573" asserts="0">
              <properties />
            </test-case>
            <test-case id="2086" name="HasNoAuthorityByDefault" fullname="Mirror.Tests.NetworkBehaviourTests.HasNoAuthorityByDefault" methodname="HasNoAuthorityByDefault" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="833461541" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.013630" asserts="0">
              <properties />
            </test-case>
            <test-case id="2093" name="InvokeCommand" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeCommand" methodname="InvokeCommand" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1214217869" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.017290" asserts="0">
              <properties />
            </test-case>
            <test-case id="2096" name="InvokeRPC" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeRPC" methodname="InvokeRPC" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="379798924" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.017018" asserts="0">
              <properties />
            </test-case>
            <test-case id="2098" name="InvokeSyncEvent" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeSyncEvent" methodname="InvokeSyncEvent" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="688175352" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015029" asserts="0">
              <properties />
            </test-case>
            <test-case id="2085" name="IsClientOnly" fullname="Mirror.Tests.NetworkBehaviourTests.IsClientOnly" methodname="IsClientOnly" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="88790940" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.014866" asserts="0">
              <properties />
            </test-case>
            <test-case id="2084" name="IsServerOnly" fullname="Mirror.Tests.NetworkBehaviourTests.IsServerOnly" methodname="IsServerOnly" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1951496710" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.016149" asserts="0">
              <properties />
            </test-case>
            <test-case id="2091" name="OnCheckObserverTrueByDefault" fullname="Mirror.Tests.NetworkBehaviourTests.OnCheckObserverTrueByDefault" methodname="OnCheckObserverTrueByDefault" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="287115682" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015304" asserts="0">
              <properties />
            </test-case>
            <test-case id="2135" name="OnNetworkDestroy" fullname="Mirror.Tests.NetworkBehaviourTests.OnNetworkDestroy" methodname="OnNetworkDestroy" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1757058945" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.014523" asserts="0">
              <properties />
            </test-case>
            <test-case id="2136" name="OnStartClient" fullname="Mirror.Tests.NetworkBehaviourTests.OnStartClient" methodname="OnStartClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1640246384" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.020743" asserts="0">
              <properties />
            </test-case>
            <test-case id="2137" name="OnStartLocalPlayer" fullname="Mirror.Tests.NetworkBehaviourTests.OnStartLocalPlayer" methodname="OnStartLocalPlayer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1425885449" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.012671" asserts="0">
              <properties />
            </test-case>
            <test-case id="2099" name="RegisterDelegateDoesntOverwrite" fullname="Mirror.Tests.NetworkBehaviourTests.RegisterDelegateDoesntOverwrite" methodname="RegisterDelegateDoesntOverwrite" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1502014846" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015045" asserts="0">
              <properties />
              <output><![CDATA[Function Mirror.Tests.NetworkBehaviourDelegateComponent.Delegate and Mirror.Tests.NetworkBehaviourDelegateComponent.Delegate2 have the same hash.  Please rename one of them
]]></output>
            </test-case>
            <test-case id="2092" name="SendCommandInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendCommandInternal" methodname="SendCommandInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="851637344" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.028766" asserts="0">
              <properties />
              <output><![CDATA[Command Function CommandGenerated called on server without an active client.
Trying to send command for object without authority. Mirror.Tests.NetworkBehaviourSendCommandInternalComponent.CommandGenerated
Send command attempted with no client running [client=].
]]></output>
            </test-case>
            <test-case id="2097" name="SendEventInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendEventInternal" methodname="SendEventInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="73801186" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.018440" asserts="0">
              <properties />
              <output><![CDATA[SendEvent no server?
]]></output>
            </test-case>
            <test-case id="2094" name="SendRPCInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendRPCInternal" methodname="SendRPCInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1134106957" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.016523" asserts="0">
              <properties />
              <output><![CDATA[RPC Function RPCGenerated called on Client.
ClientRpc RPCGenerated called on un-spawned object: New Game Object
]]></output>
            </test-case>
            <test-case id="2095" name="SendTargetRPCInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendTargetRPCInternal" methodname="SendTargetRPCInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="609587104" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.016174" asserts="0">
              <properties />
              <output><![CDATA[TargetRPC Function TargetRPCGenerated called on client.
TargetRpc TargetRPCGenerated called on un-spawned object: New Game Object
TargetRPC Function TargetRPCGenerated called on connection to server
]]></output>
            </test-case>
            <test-case id="2133" name="SerializeAndDeserializeObjectsAll" fullname="Mirror.Tests.NetworkBehaviourTests.SerializeAndDeserializeObjectsAll" methodname="SerializeAndDeserializeObjectsAll" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1972350036" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.017503" asserts="0">
              <properties />
            </test-case>
            <test-case id="2134" name="SerializeAndDeserializeObjectsDelta" fullname="Mirror.Tests.NetworkBehaviourTests.SerializeAndDeserializeObjectsDelta" methodname="SerializeAndDeserializeObjectsDelta" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1848916121" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.016552" asserts="0">
              <properties />
            </test-case>
            <test-case id="2116" name="SetSyncVarGameObjectNull" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectNull" methodname="SetSyncVarGameObjectNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1025474782" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.013689" asserts="0">
              <properties />
            </test-case>
            <test-case id="2117" name="SetSyncVarGameObjectWithoutNetworkIdentity" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectWithoutNetworkIdentity" methodname="SetSyncVarGameObjectWithoutNetworkIdentity" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="558704545" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.019525" asserts="0">
              <properties />
            </test-case>
            <test-case id="2115" name="SetSyncVarGameObjectWithValidObject" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectWithValidObject" methodname="SetSyncVarGameObjectWithValidObject" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1451467750" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.011646" asserts="0">
              <properties />
            </test-case>
            <test-case id="2118" name="SetSyncVarGameObjectZeroNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectZeroNetId" methodname="SetSyncVarGameObjectZeroNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="939517808" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.017544" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2124" name="SetSyncVarNetworkIdentityNull" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityNull" methodname="SetSyncVarNetworkIdentityNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="430218965" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.040792" asserts="0">
              <properties />
            </test-case>
            <test-case id="2123" name="SetSyncVarNetworkIdentityWithValidObject" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityWithValidObject" methodname="SetSyncVarNetworkIdentityWithValidObject" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="64875171" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.013785" asserts="0">
              <properties />
            </test-case>
            <test-case id="2125" name="SetSyncVarNetworkIdentityZeroNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityZeroNetId" methodname="SetSyncVarNetworkIdentityZeroNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="615396727" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015119" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2102" name="SyncVarGameObjectEqualNull" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualNull" methodname="SyncVarGameObjectEqualNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1516239020" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.019666" asserts="0">
              <properties />
            </test-case>
            <test-case id="2107" name="SyncVarGameObjectEqualUnspawnedGO" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualUnspawnedGO" methodname="SyncVarGameObjectEqualUnspawnedGO" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="501829156" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.013767" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2108" name="SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" methodname="SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1671140280" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.014729" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2105" name="SyncVarGameObjectEqualValidGOWithDifferentNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualValidGOWithDifferentNetId" methodname="SyncVarGameObjectEqualValidGOWithDifferentNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="362015746" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.015264" asserts="0">
              <properties />
            </test-case>
            <test-case id="2106" name="SyncVarGameObjectEqualValidGOWithSameNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualValidGOWithSameNetId" methodname="SyncVarGameObjectEqualValidGOWithSameNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1439954130" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:18Z" duration="0.018951" asserts="0">
              <properties />
            </test-case>
            <test-case id="2104" name="SyncVarGameObjectEqualWithoutIdentityComponent" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualWithoutIdentityComponent" methodname="SyncVarGameObjectEqualWithoutIdentityComponent" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="423401468" result="Passed" start-time="2020-05-02 11:15:18Z" end-time="2020-05-02 11:15:19Z" duration="0.014848" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2103" name="SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" methodname="SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="210966393" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.011500" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2101" name="SyncVarGameObjectEqualZeroNetIdNullIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualZeroNetIdNullIsTrue" methodname="SyncVarGameObjectEqualZeroNetIdNullIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="101684341" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018490" asserts="0">
              <properties />
            </test-case>
            <test-case id="2110" name="SyncVarNetworkIdentityEqualNull" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualNull" methodname="SyncVarNetworkIdentityEqualNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="932709617" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.019574" asserts="0">
              <properties />
            </test-case>
            <test-case id="2113" name="SyncVarNetworkIdentityEqualUnspawnedIdentity" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualUnspawnedIdentity" methodname="SyncVarNetworkIdentityEqualUnspawnedIdentity" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="29568356" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.014515" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2114" name="SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" methodname="SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1115548092" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.015781" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2111" name="SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" methodname="SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="613781560" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.019122" asserts="0">
              <properties />
            </test-case>
            <test-case id="2112" name="SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" methodname="SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1515478799" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.016260" asserts="0">
              <properties />
            </test-case>
            <test-case id="2109" name="SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" methodname="SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1942970201" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.014232" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2142" name="NetworkClientTests" fullname="Mirror.Tests.NetworkClientTests" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.118059" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2145" name="ConnectUri" fullname="Mirror.Tests.NetworkClientTests.ConnectUri" methodname="ConnectUri" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="334664750" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.017749" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Client Message: Connected
MemoryTransport Server Message: Connected
]]></output>
            </test-case>
            <test-case id="2146" name="DisconnectInHostMode" fullname="Mirror.Tests.NetworkClientTests.DisconnectInHostMode" methodname="DisconnectInHostMode" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1055610293" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.020109" asserts="0">
              <properties />
            </test-case>
            <test-case id="2144" name="isConnected" fullname="Mirror.Tests.NetworkClientTests.isConnected" methodname="isConnected" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="118736615" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.026927" asserts="0">
              <properties />
            </test-case>
            <test-case id="2147" name="Send" fullname="Mirror.Tests.NetworkClientTests.Send" methodname="Send" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="2124416038" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.021849" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Client Message: Connected
MemoryTransport Server Message: Connected
MemoryTransport Server Message: Data: 1D-33
]]></output>
            </test-case>
            <test-case id="2143" name="serverIp" fullname="Mirror.Tests.NetworkClientTests.serverIp" methodname="serverIp" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="12081215" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018747" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2148" name="NetworkIdentityTests" fullname="Mirror.Tests.NetworkIdentityTests" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" testcasecount="55" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:20Z" duration="1.044369" total="55" passed="55" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2189" name="AddAllReadyServerConnectionsToObservers" fullname="Mirror.Tests.NetworkIdentityTests.AddAllReadyServerConnectionsToObservers" methodname="AddAllReadyServerConnectionsToObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="484569552" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.020875" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2177" name="AddObserver" fullname="Mirror.Tests.NetworkIdentityTests.AddObserver" methodname="AddObserver" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1473606058" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.013294" asserts="0">
              <properties />
              <output><![CDATA[AddObserver for New Game Object (UnityEngine.GameObject) observer list is null
]]></output>
            </test-case>
            <test-case id="2162" name="AssignAndRemoveClientAuthority" fullname="Mirror.Tests.NetworkIdentityTests.AssignAndRemoveClientAuthority" methodname="AssignAndRemoveClientAuthority" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="218327758" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.022706" asserts="0">
              <properties />
              <output><![CDATA[AssignClientAuthority can only be called on the server for spawned objects.
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
AssignClientAuthority for New Game Object (UnityEngine.GameObject) already has an owner. Use RemoveClientAuthority() first.
AssignClientAuthority for New Game Object (UnityEngine.GameObject) owner cannot be null. Use RemoveClientAuthority() instead.
RemoveClientAuthority can only be called on the server for spawned objects.
RemoveClientAuthority cannot remove authority for a player object
]]></output>
            </test-case>
            <test-case id="2155" name="AssignSceneID" fullname="Mirror.Tests.NetworkIdentityTests.AssignSceneID" methodname="AssignSceneID" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1398435950" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.019031" asserts="0">
              <properties />
            </test-case>
            <test-case id="2180" name="ClearAllComponentsDirtyBits" fullname="Mirror.Tests.NetworkIdentityTests.ClearAllComponentsDirtyBits" methodname="ClearAllComponentsDirtyBits" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="784171817" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.017296" asserts="0">
              <properties />
            </test-case>
            <test-case id="2179" name="ClearDirtyComponentsDirtyBits" fullname="Mirror.Tests.NetworkIdentityTests.ClearDirtyComponentsDirtyBits" methodname="ClearDirtyComponentsDirtyBits" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="904313420" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.024138" asserts="0">
              <properties />
            </test-case>
            <test-case id="2178" name="ClearObservers" fullname="Mirror.Tests.NetworkIdentityTests.ClearObservers" methodname="ClearObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="537224756" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.019311" asserts="0">
              <properties />
            </test-case>
            <test-case id="2171" name="CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" fullname="Mirror.Tests.NetworkIdentityTests.CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" methodname="CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1515995039" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.020612" asserts="0">
              <properties />
              <output><![CDATA[Only 64 NetworkBehaviour components are allowed for NetworkIdentity: New Game Object because of the dirtyComponentMask: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2201" name="GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" methodname="GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1999659042" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018357" asserts="0">
              <properties />
            </test-case>
            <test-case id="2202" name="GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" methodname="GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="168423236" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.014506" asserts="0">
              <properties />
            </test-case>
            <test-case id="2199" name="GetIntialComponentsMaskShouldReturn1BitPerNetworkBehaviour" fullname="Mirror.Tests.NetworkIdentityTests.GetIntialComponentsMaskShouldReturn1BitPerNetworkBehaviour" methodname="GetIntialComponentsMaskShouldReturn1BitPerNetworkBehaviour" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1211672718" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.015705" asserts="0">
              <properties />
            </test-case>
            <test-case id="2200" name="GetIntialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" fullname="Mirror.Tests.NetworkIdentityTests.GetIntialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" methodname="GetIntialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="162367625" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.015920" asserts="0">
              <properties />
            </test-case>
            <test-case id="2186" name="GetNewObservers" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObservers" methodname="GetNewObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="268310301" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018243" asserts="0">
              <properties />
            </test-case>
            <test-case id="2187" name="GetNewObserversClearsHashSet" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObserversClearsHashSet" methodname="GetNewObserversClearsHashSet" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="67908150" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.014572" asserts="0">
              <properties />
            </test-case>
            <test-case id="2188" name="GetNewObserversFalseIfNoComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObserversFalseIfNoComponents" methodname="GetNewObserversFalseIfNoComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="2123896074" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.014823" asserts="0">
              <properties />
            </test-case>
            <test-case id="2152" name="GetSetAssetId" fullname="Mirror.Tests.NetworkIdentityTests.GetSetAssetId" methodname="GetSetAssetId" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1293590500" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.016345" asserts="0">
              <properties />
            </test-case>
            <test-case id="2182" name="HandleCommand" fullname="Mirror.Tests.NetworkIdentityTests.HandleCommand" methodname="HandleCommand" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="504321871" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018135" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming Command [-1116480643] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2183" name="HandleRpc" fullname="Mirror.Tests.NetworkIdentityTests.HandleRpc" methodname="HandleRpc" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1986752145" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018966" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming ClientRpc [-1367188039] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2184" name="HandleSyncEvent" fullname="Mirror.Tests.NetworkIdentityTests.HandleSyncEvent" methodname="HandleSyncEvent" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="2116132229" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.015241" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming SyncEvent [-1126363019] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2151" name="HostMode_IsFlags_Test" fullname="Mirror.Tests.NetworkIdentityTests.HostMode_IsFlags_Test" methodname="HostMode_IsFlags_Test" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="47998739" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.015028" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
No ready connection found for setting player controller during InternalAddPlayer
]]></output>
            </test-case>
            <test-case id="2163" name="NotifyAuthorityCallsOnStartStopAuthority" fullname="Mirror.Tests.NetworkIdentityTests.NotifyAuthorityCallsOnStartStopAuthority" methodname="NotifyAuthorityCallsOnStartStopAuthority" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="197325384" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018766" asserts="0">
              <properties />
            </test-case>
            <test-case id="2166" name="OnCheckObserverCatchesException" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverCatchesException" methodname="OnCheckObserverCatchesException" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1995631175" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.015025" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnCheckObserver:some exception   at Mirror.Tests.NetworkIdentityTests+CheckObserverExceptionNetworkBehaviour.OnCheckObserver (Mirror.NetworkConnection conn) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:160 
  at Mirror.NetworkIdentity.OnCheckObserver (Mirror.NetworkConnection conn) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:733 
]]></output>
            </test-case>
            <test-case id="2168" name="OnCheckObserverFalse" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverFalse" methodname="OnCheckObserverFalse" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="245465078" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018339" asserts="0">
              <properties />
            </test-case>
            <test-case id="2167" name="OnCheckObserverTrue" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverTrue" methodname="OnCheckObserverTrue" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1403061458" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.020373" asserts="0">
              <properties />
            </test-case>
            <test-case id="2172" name="OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" fullname="Mirror.Tests.NetworkIdentityTests.OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" methodname="OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1865452294" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.025860" asserts="0">
              <properties />
              <output><![CDATA[OnDeserialize was expected to read 8 instead of 4 bytes for object:New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeMismatchNetworkBehaviour sceneId=D692202. Make sure that OnSerialize and OnDeserialize write/read the same amount of data in all cases.
]]></output>
            </test-case>
            <test-case id="2174" name="OnNetworkDestroy" fullname="Mirror.Tests.NetworkIdentityTests.OnNetworkDestroy" methodname="OnNetworkDestroy" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1885857513" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.016191" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnNetworkDestroy:some exception   at Mirror.Tests.NetworkIdentityTests+NetworkDestroyExceptionNetworkBehaviour.OnStopClient () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:98 
  at Mirror.NetworkIdentity.OnStopClient () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:754 
]]></output>
            </test-case>
            <test-case id="2170" name="OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" fullname="Mirror.Tests.NetworkIdentityTests.OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" methodname="OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="908356826" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.029042" asserts="0">
              <properties />
              <output><![CDATA[Only 64 NetworkBehaviour components are allowed for NetworkIdentity: New Game Object because of the dirtyComponentMask: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2169" name="OnSerializeAndDeserializeAllSafely" fullname="Mirror.Tests.NetworkIdentityTests.OnSerializeAndDeserializeAllSafely" methodname="OnSerializeAndDeserializeAllSafely" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1443097202" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.018955" asserts="0">
              <properties />
              <output><![CDATA[OnSerialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=849BC5CE

System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnSerialize (Mirror.NetworkWriter writer, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:221 
  at Mirror.NetworkIdentity.OnSerializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkWriter writer, System.Boolean initialState) [0x0001a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:782 
OnDeserialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=849BC5CE length=0. Possible Reasons:
  * Do Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize and OnDeserialize calls write the same amount of data(0 bytes)? 
  * Was there an exception in Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize/OnDeserialize code?
  * Are the server and client the exact same project?
  * Maybe this OnDeserialize call was meant for another GameObject? The sceneIds can easily get out of sync if the Hierarchy was modified only in the client OR the server. Try rebuilding both.

System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnDeserialize (Mirror.NetworkReader reader, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:225 
  at Mirror.NetworkIdentity.OnDeserializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkReader reader, System.Boolean initialState) [0x0008b] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:923 
OnDeserialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=849BC5CE length=0. Possible Reasons:
  * Do Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize and OnDeserialize calls write the same amount of data(0 bytes)? 
  * Was there an exception in Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize/OnDeserialize code?
  * Are the server and client the exact same project?
  * Maybe this OnDeserialize call was meant for another GameObject? The sceneIds can easily get out of sync if the Hierarchy was modified only in the client OR the server. Try rebuilding both.

System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnDeserialize (Mirror.NetworkReader reader, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:225 
  at Mirror.NetworkIdentity.OnDeserializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkReader reader, System.Boolean initialState) [0x0008b] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:923 
]]></output>
            </test-case>
            <test-case id="2203" name="OnSetHostVisibilityBaseTest" fullname="Mirror.Tests.NetworkIdentityTests.OnSetHostVisibilityBaseTest" methodname="OnSetHostVisibilityBaseTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="848073453" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.010113" asserts="0">
              <properties />
            </test-case>
            <test-case id="2164" name="OnSetHostVisibilityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnSetHostVisibilityCallsComponentsAndCatchesExceptions" methodname="OnSetHostVisibilityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1604003291" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.019560" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnSetLocalVisibility:some exception   at Mirror.Tests.NetworkIdentityTests+SetHostVisibilityExceptionNetworkBehaviour.OnSetHostVisibility (System.Boolean visible) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:134 
  at Mirror.NetworkIdentity.OnSetHostVisibility (System.Boolean visible) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:714 
Exception in OnSetLocalVisibility:some exception   at Mirror.Tests.NetworkIdentityTests+SetHostVisibilityExceptionNetworkBehaviour.OnSetHostVisibility (System.Boolean visible) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:134 
  at Mirror.NetworkIdentity.OnSetHostVisibility (System.Boolean visible) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:714 
]]></output>
            </test-case>
            <test-case id="2160" name="OnStartAuthorityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartAuthorityCallsComponentsAndCatchesExceptions" methodname="OnStartAuthorityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="10971697" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.013534" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartAuthority:some exception   at Mirror.Tests.NetworkIdentityTests+StartAuthorityExceptionNetworkBehaviour.OnStartAuthority () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:50 
  at Mirror.NetworkIdentity.OnStartAuthority () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:679 
]]></output>
            </test-case>
            <test-case id="2159" name="OnStartClientCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartClientCallsComponentsAndCatchesExceptions" methodname="OnStartClientCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="21823615" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.014321" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartClient:some exception   at Mirror.Tests.NetworkIdentityTests+StartClientExceptionNetworkBehaviour.OnStartClient () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:40 
  at Mirror.NetworkIdentity.OnStartClient () [0x0007d] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:624 
]]></output>
            </test-case>
            <test-case id="2173" name="OnStartLocalPlayer" fullname="Mirror.Tests.NetworkIdentityTests.OnStartLocalPlayer" methodname="OnStartLocalPlayer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="57043933" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.014538" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartLocalPlayer:some exception   at Mirror.Tests.NetworkIdentityTests+StartLocalPlayerExceptionNetworkBehaviour.OnStartLocalPlayer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:82 
  at Mirror.NetworkIdentity.OnStartLocalPlayer () [0x0002a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:649 
]]></output>
            </test-case>
            <test-case id="2158" name="OnStartServerCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerCallsComponentsAndCatchesExceptions" methodname="OnStartServerCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="72633860" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:19Z" duration="0.014861" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartServer:some exception   at Mirror.Tests.NetworkIdentityTests+StartServerExceptionNetworkBehaviour.OnStartServer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:30 
  at Mirror.NetworkIdentity.OnStartServer () [0x000da] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:575 
]]></output>
            </test-case>
            <test-case id="2165" name="OnStartServerInHostModeSetsIsClientTrue" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerInHostModeSetsIsClientTrue" methodname="OnStartServerInHostModeSetsIsClientTrue" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="433909406" result="Passed" start-time="2020-05-02 11:15:19Z" end-time="2020-05-02 11:15:20Z" duration="0.014805" asserts="0">
              <properties />
            </test-case>
            <test-case id="2149" name="OnStartServerTest" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerTest" methodname="OnStartServerTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1299459211" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.019627" asserts="0">
              <properties />
            </test-case>
            <test-case id="2161" name="OnStopAuthorityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStopAuthorityCallsComponentsAndCatchesExceptions" methodname="OnStopAuthorityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="258473138" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014881" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopAuthority:some exception   at Mirror.Tests.NetworkIdentityTests+StopAuthorityExceptionNetworkBehaviour.OnStopAuthority () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:66 
  at Mirror.NetworkIdentity.OnStopAuthority () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:699 
]]></output>
            </test-case>
            <test-case id="2175" name="OnStopServer" fullname="Mirror.Tests.NetworkIdentityTests.OnStopServer" methodname="OnStopServer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="2090464874" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014451" asserts="0">
              <properties />
            </test-case>
            <test-case id="2176" name="OnStopServerEx" fullname="Mirror.Tests.NetworkIdentityTests.OnStopServerEx" methodname="OnStopServerEx" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1007185474" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.027756" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopServer:some exception   at Mirror.Tests.NetworkIdentityTests+StopServerExceptionNetworkBehaviour.OnStopServer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:120 
  at Mirror.NetworkIdentity.OnStopServer () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:595 
]]></output>
            </test-case>
            <test-case id="2157" name="OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" fullname="Mirror.Tests.NetworkIdentityTests.OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" methodname="OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1377383757" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.013462" asserts="0">
              <properties />
            </test-case>
            <test-case id="2196" name="RebuildObserversAddRemoveAndVisListTest" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddRemoveAndVisListTest" methodname="RebuildObserversAddRemoveAndVisListTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="589212973" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.015404" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2190" name="RebuildObserversAddsOwnReadyPlayer" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsOwnReadyPlayer" methodname="RebuildObserversAddsOwnReadyPlayer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1569054692" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014559" asserts="0">
              <properties />
            </test-case>
            <test-case id="2192" name="RebuildObserversAddsReadyConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsReadyConnectionsIfImplemented" methodname="RebuildObserversAddsReadyConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1419580647" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.018737" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2194" name="RebuildObserversAddsReadyServerConnectionsIfNotImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsReadyServerConnectionsIfNotImplemented" methodname="RebuildObserversAddsReadyServerConnectionsIfNotImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="826143431" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.015633" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2195" name="RebuildObserversDoesNotAddServerConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversDoesNotAddServerConnectionsIfImplemented" methodname="RebuildObserversDoesNotAddServerConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="603791205" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014172" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2193" name="RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" methodname="RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="468798766" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014775" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2191" name="RebuildObserversOnlyAddsOwnPlayerIfReady" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversOnlyAddsOwnPlayerIfReady" methodname="RebuildObserversOnlyAddsOwnPlayerIfReady" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="508748628" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.016050" asserts="0">
              <properties />
            </test-case>
            <test-case id="2198" name="RebuildObserversReturnsIfNull" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversReturnsIfNull" methodname="RebuildObserversReturnsIfNull" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1791803625" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.017343" asserts="0">
              <properties />
            </test-case>
            <test-case id="2197" name="RebuildObserversSetsHostVisibility" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversSetsHostVisibility" methodname="RebuildObserversSetsHostVisibility" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="923177867" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014797" asserts="0">
              <properties />
            </test-case>
            <test-case id="2154" name="RemoveObserverInternal" fullname="Mirror.Tests.NetworkIdentityTests.RemoveObserverInternal" methodname="RemoveObserverInternal" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="276417764" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.015603" asserts="0">
              <properties />
            </test-case>
            <test-case id="2181" name="Reset" fullname="Mirror.Tests.NetworkIdentityTests.Reset" methodname="Reset" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="779618957" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.018986" asserts="0">
              <properties />
            </test-case>
            <test-case id="2150" name="ServerMode_IsFlags_Test" fullname="Mirror.Tests.NetworkIdentityTests.ServerMode_IsFlags_Test" methodname="ServerMode_IsFlags_Test" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1500237258" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.019515" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2185" name="ServerUpdate" fullname="Mirror.Tests.NetworkIdentityTests.ServerUpdate" methodname="ServerUpdate" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="99323554" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014987" asserts="0">
              <properties />
            </test-case>
            <test-case id="2153" name="SetClientOwner" fullname="Mirror.Tests.NetworkIdentityTests.SetClientOwner" methodname="SetClientOwner" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1655635276" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.015509" asserts="0">
              <properties />
              <output><![CDATA[Object New Game Object (Mirror.NetworkIdentity) netId=0 already has an owner. Use RemoveClientAuthority() first: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2156" name="SetSceneIdSceneHashPartInternal" fullname="Mirror.Tests.NetworkIdentityTests.SetSceneIdSceneHashPartInternal" methodname="SetSceneIdSceneHashPartInternal" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1265019200" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.019561" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2204" name="NetworkManagerStopHostOnServerDisconnectTest" fullname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" classname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.059501" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2205" name="StopHostCallsOnServerDisconnectForHostClient" fullname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest.StopHostCallsOnServerDisconnectForHostClient" methodname="StopHostCallsOnServerDisconnectForHostClient" classname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" runstate="Runnable" seed="1359107081" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.045650" asserts="0">
              <properties />
              <output><![CDATA[SendMessage cannot be called during Awake, CheckConsistency, or OnValidate
NetworkManager: added default Transport because there was none yet.
Server: Start port=7777
Server: listening port=7777
NetworkClient.RegisterHandler replacing hanlder for Mirror.ObjectDestroyMessage, id=54308. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing hanlder for Mirror.ObjectHideMessage, id=3662. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing hanlder for Mirror.NetworkPongMessage, id=10297. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing hanlder for Mirror.SpawnMessage, id=16484. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing hanlder for Mirror.ObjectSpawnStartedMessage, id=59786. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing hanlder for Mirror.ObjectSpawnFinishedMessage, id=34417. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing hanlder for Mirror.UpdateVarsMessage, id=16986. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing hanlder for Mirror.RpcMessage, id=33978. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing hanlder for Mirror.SyncEventMessage, id=49824. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
Server: stopping...
Server Thread stopped. That's okay. System.Net.Sockets.SocketException (0x80004005): interrupted
  at System.Net.Sockets.Socket.Accept () [0x00033] in <3845a180c26b4889bc2d47593a665814>:0 
  at System.Net.Sockets.TcpListener.AcceptTcpClient () [0x0001e] in <3845a180c26b4889bc2d47593a665814>:0 
  at Telepathy.Server.Listen (System.Int32 port) [0x00076] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/Transport/Telepathy/Server.cs:91 
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2206" name="NetworkManagerTest" fullname="Mirror.Tests.NetworkManagerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.169107" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2215" name="GetStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.GetStartPositionTest" methodname="GetStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1457169421" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.009997" asserts="0">
              <properties />
            </test-case>
            <test-case id="2213" name="RegisterStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.RegisterStartPositionTest" methodname="RegisterStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="978502583" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.019668" asserts="0">
              <properties />
            </test-case>
            <test-case id="2212" name="ShutdownTest" fullname="Mirror.Tests.NetworkManagerTest.ShutdownTest" methodname="ShutdownTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1862627572" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014644" asserts="0">
              <properties />
            </test-case>
            <test-case id="2210" name="StartClientTest" fullname="Mirror.Tests.NetworkManagerTest.StartClientTest" methodname="StartClientTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1884731301" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.016022" asserts="0">
              <properties />
            </test-case>
            <test-case id="2208" name="StartServerTest" fullname="Mirror.Tests.NetworkManagerTest.StartServerTest" methodname="StartServerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1636872485" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014434" asserts="0">
              <properties />
            </test-case>
            <test-case id="2211" name="StopClientTest" fullname="Mirror.Tests.NetworkManagerTest.StopClientTest" methodname="StopClientTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="116203995" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.019444" asserts="0">
              <properties />
            </test-case>
            <test-case id="2209" name="StopServerTest" fullname="Mirror.Tests.NetworkManagerTest.StopServerTest" methodname="StopServerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="2100464627" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.031035" asserts="0">
              <properties />
              <output><![CDATA[NetworkServer.RegisterHandler replacing hanlder for Mirror.ReadyMessage, id=40252. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing hanlder for Mirror.CommandMessage, id=46228. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing hanlder for Mirror.RemovePlayerMessage, id=56426. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing hanlder for Mirror.NetworkPingMessage, id=33151. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing hanlder for Mirror.ConnectMessage, id=55829. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing hanlder for Mirror.DisconnectMessage, id=8819. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing hanlder for Mirror.AddPlayerMessage, id=13085. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing hanlder for Mirror.ErrorMessage, id=22839. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
]]></output>
            </test-case>
            <test-case id="2214" name="UnRegisterStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.UnRegisterStartPositionTest" methodname="UnRegisterStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="162331422" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014365" asserts="0">
              <properties />
            </test-case>
            <test-case id="2207" name="VariableTest" fullname="Mirror.Tests.NetworkManagerTest.VariableTest" methodname="VariableTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="827590298" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014304" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2216" name="NetworkMatchCheckerTest" fullname="Mirror.Tests.NetworkMatchCheckerTest" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.135456" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2222" name="ChangingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.ChangingMatchIdShouldRebuildObservers" methodname="ChangingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1331416174" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.017464" asserts="0">
              <properties />
            </test-case>
            <test-case id="2223" name="ClearingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.ClearingMatchIdShouldRebuildObservers" methodname="ClearingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="155066850" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.019612" asserts="0">
              <properties />
            </test-case>
            <test-case id="2218" name="OnCheckObserverShouldBeFalseForDifferentMatchId" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseForDifferentMatchId" methodname="OnCheckObserverShouldBeFalseForDifferentMatchId" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="248603483" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.015317" asserts="0">
              <properties />
            </test-case>
            <test-case id="2220" name="OnCheckObserverShouldBeFalseForEmptyGuid" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseForEmptyGuid" methodname="OnCheckObserverShouldBeFalseForEmptyGuid" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="842697207" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.018666" asserts="0">
              <properties />
            </test-case>
            <test-case id="2219" name="OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" methodname="OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="886610847" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.016501" asserts="0">
              <properties />
            </test-case>
            <test-case id="2217" name="OnCheckObserverShouldBeTrueForSameMatchId" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeTrueForSameMatchId" methodname="OnCheckObserverShouldBeTrueForSameMatchId" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1170270194" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.018573" asserts="0">
              <properties />
            </test-case>
            <test-case id="2221" name="SettingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.SettingMatchIdShouldRebuildObservers" methodname="SettingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1683991286" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.014342" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2224" name="NetworkReaderPoolTest" fullname="Mirror.Tests.NetworkReaderPoolTest" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.076436" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2229" name="GrowCapacity" fullname="Mirror.Tests.NetworkReaderPoolTest.GrowCapacity" methodname="GrowCapacity" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="1713812605" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.006303" asserts="0">
              <properties />
            </test-case>
            <test-case id="2226" name="PoolCanGetMoreReadersThanPoolSize" fullname="Mirror.Tests.NetworkReaderPoolTest.PoolCanGetMoreReadersThanPoolSize" methodname="PoolCanGetMoreReadersThanPoolSize" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="1052675940" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.012603" asserts="0">
              <properties />
            </test-case>
            <test-case id="2227" name="PoolReUsesReadersUpToSizeLimit" fullname="Mirror.Tests.NetworkReaderPoolTest.PoolReUsesReadersUpToSizeLimit" methodname="PoolReUsesReadersUpToSizeLimit" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="1974875876" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.017487" asserts="0">
              <properties />
            </test-case>
            <test-case id="2228" name="ShrinkCapacity" fullname="Mirror.Tests.NetworkReaderPoolTest.ShrinkCapacity" methodname="ShrinkCapacity" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="496848799" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.015049" asserts="0">
              <properties />
            </test-case>
            <test-case id="2225" name="TestPoolRecycling" fullname="Mirror.Tests.NetworkReaderPoolTest.TestPoolRecycling" methodname="TestPoolRecycling" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="31430524" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.016506" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2230" name="NetworkReaderTest" fullname="Mirror.Tests.NetworkReaderTest" classname="Mirror.Tests.NetworkReaderTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.013251" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2231" name="ReadBytesCountTooBigTest" fullname="Mirror.Tests.NetworkReaderTest.ReadBytesCountTooBigTest" methodname="ReadBytesCountTooBigTest" classname="Mirror.Tests.NetworkReaderTest" runstate="Runnable" seed="1048239717" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.000498" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2232" name="NetworkServerTest" fullname="Mirror.Tests.NetworkServerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" testcasecount="32" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:21Z" duration="0.561562" total="32" passed="32" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2253" name="ActivateHostSceneCallsOnStartClient" fullname="Mirror.Tests.NetworkServerTest.ActivateHostSceneCallsOnStartClient" methodname="ActivateHostSceneCallsOnStartClient" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="883928162" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.015084" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2243" name="AddConnectionTest" fullname="Mirror.Tests.NetworkServerTest.AddConnectionTest" methodname="AddConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1500617505" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:20Z" duration="0.015209" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2252" name="CommandMessageCallsCommandTest" fullname="Mirror.Tests.NetworkServerTest.CommandMessageCallsCommandTest" methodname="CommandMessageCallsCommandTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="86193856" result="Passed" start-time="2020-05-02 11:15:20Z" end-time="2020-05-02 11:15:21Z" duration="0.018710" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Command for object without authority [netId=42]
Spawned object not found when handling Command message [netId=43]
]]></output>
            </test-case>
            <test-case id="2239" name="ConnectDuplicateConnectionIdsTest" fullname="Mirror.Tests.NetworkServerTest.ConnectDuplicateConnectionIdsTest" methodname="ConnectDuplicateConnectionIdsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1108861449" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.010488" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2237" name="ConnectionsDictTest" fullname="Mirror.Tests.NetworkServerTest.ConnectionsDictTest" methodname="ConnectionsDictTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1609797176" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.011065" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2235" name="ConnectMessageHandlerTest" fullname="Mirror.Tests.NetworkServerTest.ConnectMessageHandlerTest" methodname="ConnectMessageHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1419877256" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014996" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2245" name="DisconnectAllConnectionsTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectAllConnectionsTest" methodname="DisconnectAllConnectionsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="795082191" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.017426" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2246" name="DisconnectAllTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectAllTest" methodname="DisconnectAllTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1562518060" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014231" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2236" name="DisconnectMessageHandlerTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectMessageHandlerTest" methodname="DisconnectMessageHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1297911226" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014405" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2257" name="GetNetworkIdentity" fullname="Mirror.Tests.NetworkServerTest.GetNetworkIdentity" methodname="GetNetworkIdentity" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1534136416" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.043294" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
GameObject New Game Object doesn't have NetworkIdentity.
]]></output>
            </test-case>
            <test-case id="2259" name="HideForConnection" fullname="Mirror.Tests.NetworkServerTest.HideForConnection" methodname="HideForConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="794176043" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.012454" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2233" name="IsActiveTest" fullname="Mirror.Tests.NetworkServerTest.IsActiveTest" methodname="IsActiveTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="111379337" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.011136" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2242" name="LocalClientActiveTest" fullname="Mirror.Tests.NetworkServerTest.LocalClientActiveTest" methodname="LocalClientActiveTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1345253648" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.012903" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2234" name="MaxConnectionsTest" fullname="Mirror.Tests.NetworkServerTest.MaxConnectionsTest" methodname="MaxConnectionsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1559678516" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.015325" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2238" name="OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" fullname="Mirror.Tests.NetworkServerTest.OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" methodname="OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1983919441" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.016497" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Server.HandleConnect: invalid connectionId: 0 . Needs to be >0, because 0 is reserved for local player.
Server.HandleConnect: invalid connectionId: -1 . Needs to be >0, because 0 is reserved for local player.
]]></output>
            </test-case>
            <test-case id="2248" name="OnDataReceivedInvalidConnectionIdTest" fullname="Mirror.Tests.NetworkServerTest.OnDataReceivedInvalidConnectionIdTest" methodname="OnDataReceivedInvalidConnectionIdTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="437196039" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014416" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
HandleData Unknown connectionId:42
]]></output>
            </test-case>
            <test-case id="2247" name="OnDataReceivedTest" fullname="Mirror.Tests.NetworkServerTest.OnDataReceivedTest" methodname="OnDataReceivedTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1246455527" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.015412" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2251" name="ReadyMessageSetsClientReadyTest" fullname="Mirror.Tests.NetworkServerTest.ReadyMessageSetsClientReadyTest" methodname="ReadyMessageSetsClientReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1877453723" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.026790" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2255" name="RegisterUnregisterClearHandlerTest" fullname="Mirror.Tests.NetworkServerTest.RegisterUnregisterClearHandlerTest" methodname="RegisterUnregisterClearHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1267580911" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.013858" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2244" name="RemoveConnectionTest" fullname="Mirror.Tests.NetworkServerTest.RemoveConnectionTest" methodname="RemoveConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2144141781" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.010855" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2241" name="RemoveLocalConnectionTest" fullname="Mirror.Tests.NetworkServerTest.RemoveLocalConnectionTest" methodname="RemoveLocalConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1156833333" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.030391" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2264" name="ResetTest" fullname="Mirror.Tests.NetworkServerTest.ResetTest" methodname="ResetTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1840332272" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.016864" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2254" name="SendToAllTest" fullname="Mirror.Tests.NetworkServerTest.SendToAllTest" methodname="SendToAllTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1236489254" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.013150" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2256" name="SendToClientOfPlayer" fullname="Mirror.Tests.NetworkServerTest.SendToClientOfPlayer" methodname="SendToClientOfPlayer" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1901320431" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.010212" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2250" name="SetAllClientsNotReadyTest" fullname="Mirror.Tests.NetworkServerTest.SetAllClientsNotReadyTest" methodname="SetAllClientsNotReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1852312174" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.011393" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2249" name="SetClientReadyAndNotReadyTest" fullname="Mirror.Tests.NetworkServerTest.SetClientReadyAndNotReadyTest" methodname="SetClientReadyAndNotReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1350950309" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014878" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2240" name="SetLocalConnectionTest" fullname="Mirror.Tests.NetworkServerTest.SetLocalConnectionTest" methodname="SetLocalConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2113144393" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.015561" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Local Connection already exists
]]></output>
            </test-case>
            <test-case id="2258" name="ShowForConnection" fullname="Mirror.Tests.NetworkServerTest.ShowForConnection" methodname="ShowForConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="241034479" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014682" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2263" name="ShutdownCleanupTest" fullname="Mirror.Tests.NetworkServerTest.ShutdownCleanupTest" methodname="ShutdownCleanupTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="674335660" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.010214" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2261" name="SpawnObjects" fullname="Mirror.Tests.NetworkServerTest.SpawnObjects" methodname="SpawnObjects" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="565414972" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.012345" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2262" name="UnSpawn" fullname="Mirror.Tests.NetworkServerTest.UnSpawn" methodname="UnSpawn" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1337532042" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.018053" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2260" name="ValidateSceneObject" fullname="Mirror.Tests.NetworkServerTest.ValidateSceneObject" methodname="ValidateSceneObject" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1598810295" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014040" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2265" name="NetworkTransformChildTest" fullname="Mirror.Tests.NetworkTransformChildTest" classname="Mirror.Tests.NetworkTransformChildTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.010239" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2266" name="TargetComponentTest" fullname="Mirror.Tests.NetworkTransformChildTest.TargetComponentTest" methodname="TargetComponentTest" classname="Mirror.Tests.NetworkTransformChildTest" runstate="Runnable" seed="1569561819" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001041" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2267" name="NetworkTransformTest" fullname="Mirror.Tests.NetworkTransformTest" classname="Mirror.Tests.NetworkTransformTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.012095" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2268" name="SerializeIntoWriterTest" fullname="Mirror.Tests.NetworkTransformTest.SerializeIntoWriterTest" methodname="SerializeIntoWriterTest" classname="Mirror.Tests.NetworkTransformTest" runstate="Runnable" seed="747432167" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000588" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2269" name="NetworkWriterPoolTest" fullname="Mirror.Tests.NetworkWriterPoolTest" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.092518" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2274" name="GrowCapacity" fullname="Mirror.Tests.NetworkWriterPoolTest.GrowCapacity" methodname="GrowCapacity" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1639915815" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.016561" asserts="0">
              <properties />
            </test-case>
            <test-case id="2271" name="PoolCanGetMoreWritersThanPoolSize" fullname="Mirror.Tests.NetworkWriterPoolTest.PoolCanGetMoreWritersThanPoolSize" methodname="PoolCanGetMoreWritersThanPoolSize" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1764215250" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.017812" asserts="0">
              <properties />
            </test-case>
            <test-case id="2272" name="PoolReUsesWritersUpToSizeLimit" fullname="Mirror.Tests.NetworkWriterPoolTest.PoolReUsesWritersUpToSizeLimit" methodname="PoolReUsesWritersUpToSizeLimit" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="838625271" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014040" asserts="0">
              <properties />
            </test-case>
            <test-case id="2273" name="ShrinkCapacity" fullname="Mirror.Tests.NetworkWriterPoolTest.ShrinkCapacity" methodname="ShrinkCapacity" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1242803435" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.015994" asserts="0">
              <properties />
            </test-case>
            <test-case id="2270" name="TestPoolRecycling" fullname="Mirror.Tests.NetworkWriterPoolTest.TestPoolRecycling" methodname="TestPoolRecycling" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1065256895" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014903" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2275" name="NetworkWriterTest" fullname="Mirror.Tests.NetworkWriterTest" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" testcasecount="55" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.137917" total="55" passed="55" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2321" name="TestByteEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestByteEndianness" methodname="TestByteEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1678430475" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001332" asserts="0">
              <properties />
            </test-case>
            <test-case id="2306" name="TestChar" fullname="Mirror.Tests.NetworkWriterTest.TestChar" methodname="TestChar" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="230808185" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001233" asserts="0">
              <properties />
            </test-case>
            <test-case id="2295" name="TestColor" fullname="Mirror.Tests.NetworkWriterTest.TestColor" methodname="TestColor" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2128294069" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001771" asserts="0">
              <properties />
            </test-case>
            <test-case id="2296" name="TestColor32" fullname="Mirror.Tests.NetworkWriterTest.TestColor32" methodname="TestColor32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="622673939" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001430" asserts="0">
              <properties />
            </test-case>
            <test-case id="2320" name="TestDecimalBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestDecimalBinaryCompatibility" methodname="TestDecimalBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1609218280" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001292" asserts="0">
              <properties />
            </test-case>
            <test-case id="2317" name="TestDecimals" fullname="Mirror.Tests.NetworkWriterTest.TestDecimals" methodname="TestDecimals" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2072827656" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001790" asserts="0">
              <properties />
            </test-case>
            <test-case id="2319" name="TestDoubleBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestDoubleBinaryCompatibility" methodname="TestDoubleBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="59066577" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000748" asserts="0">
              <properties />
            </test-case>
            <test-case id="2316" name="TestDoubles" fullname="Mirror.Tests.NetworkWriterTest.TestDoubles" methodname="TestDoubles" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1947128068" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000787" asserts="0">
              <properties />
            </test-case>
            <test-case id="2318" name="TestFloatBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestFloatBinaryCompatibility" methodname="TestFloatBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1936249918" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000732" asserts="0">
              <properties />
            </test-case>
            <test-case id="2315" name="TestFloats" fullname="Mirror.Tests.NetworkWriterTest.TestFloats" methodname="TestFloats" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1023891197" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000793" asserts="0">
              <properties />
            </test-case>
            <test-case id="2314" name="TestGuid" fullname="Mirror.Tests.NetworkWriterTest.TestGuid" methodname="TestGuid" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1868122494" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000764" asserts="0">
              <properties />
            </test-case>
            <test-case id="2327" name="TestIntEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestIntEndianness" methodname="TestIntEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1065261984" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000727" asserts="0">
              <properties />
            </test-case>
            <test-case id="2328" name="TestLongEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestLongEndianness" methodname="TestLongEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1348921276" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000849" asserts="0">
              <properties />
            </test-case>
            <test-case id="2301" name="TestMatrix4x4" fullname="Mirror.Tests.NetworkWriterTest.TestMatrix4x4" methodname="TestMatrix4x4" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="265353505" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.002465" asserts="0">
              <properties />
            </test-case>
            <test-case id="2310" name="TestPackedInt32" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt32" methodname="TestPackedInt32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1142348734" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000951" asserts="0">
              <properties />
            </test-case>
            <test-case id="2311" name="TestPackedInt32Failure" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt32Failure" methodname="TestPackedInt32Failure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="55990328" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001293" asserts="0">
              <properties />
            </test-case>
            <test-case id="2313" name="TestPackedInt64" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt64" methodname="TestPackedInt64" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1935616959" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001700" asserts="0">
              <properties />
            </test-case>
            <test-case id="2308" name="TestPackedUInt32" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt32" methodname="TestPackedUInt32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="65350612" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000819" asserts="0">
              <properties />
            </test-case>
            <test-case id="2309" name="TestPackedUInt32Failure" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt32Failure" methodname="TestPackedUInt32Failure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1292911874" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000986" asserts="0">
              <properties />
            </test-case>
            <test-case id="2312" name="TestPackedUInt64" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt64" methodname="TestPackedUInt64" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="174393204" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001104" asserts="0">
              <properties />
            </test-case>
            <test-case id="2299" name="TestPlane" fullname="Mirror.Tests.NetworkWriterTest.TestPlane" methodname="TestPlane" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1722567806" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.002090" asserts="0">
              <properties />
            </test-case>
            <test-case id="2297" name="TestQuaternion" fullname="Mirror.Tests.NetworkWriterTest.TestQuaternion" methodname="TestQuaternion" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1181360653" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000893" asserts="0">
              <properties />
            </test-case>
            <test-case id="2300" name="TestRay" fullname="Mirror.Tests.NetworkWriterTest.TestRay" methodname="TestRay" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1734140253" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001389" asserts="0">
              <properties />
            </test-case>
            <test-case id="2287" name="TestReading0LengthBytes" fullname="Mirror.Tests.NetworkWriterTest.TestReading0LengthBytes" methodname="TestReading0LengthBytes" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1973389028" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000701" asserts="0">
              <properties />
            </test-case>
            <test-case id="2286" name="TestReading0LengthBytesAndSize" fullname="Mirror.Tests.NetworkWriterTest.TestReading0LengthBytesAndSize" methodname="TestReading0LengthBytesAndSize" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1632336535" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000680" asserts="0">
              <properties />
            </test-case>
            <test-case id="2302" name="TestReadingInvalidString" fullname="Mirror.Tests.NetworkWriterTest.TestReadingInvalidString" methodname="TestReadingInvalidString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1814378347" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.002187" asserts="0">
              <properties />
            </test-case>
            <test-case id="2285" name="TestReadingLengthWrapAround" fullname="Mirror.Tests.NetworkWriterTest.TestReadingLengthWrapAround" methodname="TestReadingLengthWrapAround" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1031940267" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000784" asserts="0">
              <properties />
            </test-case>
            <test-case id="2289" name="TestReadingTooMuch" fullname="Mirror.Tests.NetworkWriterTest.TestReadingTooMuch" methodname="TestReadingTooMuch" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="585307980" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.009840" asserts="0">
              <properties />
            </test-case>
            <test-case id="2303" name="TestReadingTruncatedString" fullname="Mirror.Tests.NetworkWriterTest.TestReadingTruncatedString" methodname="TestReadingTruncatedString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="619559846" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000883" asserts="0">
              <properties />
            </test-case>
            <test-case id="2298" name="TestRect" fullname="Mirror.Tests.NetworkWriterTest.TestRect" methodname="TestRect" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="929942501" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001526" asserts="0">
              <properties />
            </test-case>
            <test-case id="2284" name="TestResetSetsPotionAndLength" fullname="Mirror.Tests.NetworkWriterTest.TestResetSetsPotionAndLength" methodname="TestResetSetsPotionAndLength" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="953466185" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000749" asserts="0">
              <properties />
            </test-case>
            <test-case id="2325" name="TestSbyteEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestSbyteEndianness" methodname="TestSbyteEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="239963255" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000767" asserts="0">
              <properties />
            </test-case>
            <test-case id="2283" name="TestSetLengthInitialization" fullname="Mirror.Tests.NetworkWriterTest.TestSetLengthInitialization" methodname="TestSetLengthInitialization" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="618199086" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000845" asserts="0">
              <properties />
            </test-case>
            <test-case id="2282" name="TestSetLengthZeroes" fullname="Mirror.Tests.NetworkWriterTest.TestSetLengthZeroes" methodname="TestSetLengthZeroes" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1029596848" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001098" asserts="0">
              <properties />
            </test-case>
            <test-case id="2326" name="TestShortEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestShortEndianness" methodname="TestShortEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="108474500" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000864" asserts="0">
              <properties />
            </test-case>
            <test-case id="2304" name="TestToArray" fullname="Mirror.Tests.NetworkWriterTest.TestToArray" methodname="TestToArray" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="885867405" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000866" asserts="0">
              <properties />
            </test-case>
            <test-case id="2305" name="TestToArraySegment" fullname="Mirror.Tests.NetworkWriterTest.TestToArraySegment" methodname="TestToArraySegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2143713395" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000769" asserts="0">
              <properties />
            </test-case>
            <test-case id="2323" name="TestUIntEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestUIntEndianness" methodname="TestUIntEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="336846135" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000782" asserts="0">
              <properties />
            </test-case>
            <test-case id="2324" name="TestULongEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestULongEndianness" methodname="TestULongEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1052281576" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000749" asserts="0">
              <properties />
            </test-case>
            <test-case id="2307" name="TestUnicodeString" fullname="Mirror.Tests.NetworkWriterTest.TestUnicodeString" methodname="TestUnicodeString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="209825842" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001189" asserts="0">
              <properties />
            </test-case>
            <test-case id="2322" name="TestUShortEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestUShortEndianness" methodname="TestUShortEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2056477362" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000776" asserts="0">
              <properties />
            </test-case>
            <test-case id="2290" name="TestVector2" fullname="Mirror.Tests.NetworkWriterTest.TestVector2" methodname="TestVector2" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="748978112" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001610" asserts="0">
              <properties />
            </test-case>
            <test-case id="2293" name="TestVector2Int" fullname="Mirror.Tests.NetworkWriterTest.TestVector2Int" methodname="TestVector2Int" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1095242354" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001739" asserts="0">
              <properties />
            </test-case>
            <test-case id="2291" name="TestVector3" fullname="Mirror.Tests.NetworkWriterTest.TestVector3" methodname="TestVector3" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2129386325" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001002" asserts="0">
              <properties />
            </test-case>
            <test-case id="2294" name="TestVector3Int" fullname="Mirror.Tests.NetworkWriterTest.TestVector3Int" methodname="TestVector3Int" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="230970716" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001783" asserts="0">
              <properties />
            </test-case>
            <test-case id="2292" name="TestVector4" fullname="Mirror.Tests.NetworkWriterTest.TestVector4" methodname="TestVector4" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1840264916" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001518" asserts="0">
              <properties />
            </test-case>
            <test-case id="2329" name="TestWritingAndReading" fullname="Mirror.Tests.NetworkWriterTest.TestWritingAndReading" methodname="TestWritingAndReading" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1783843182" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.002459" asserts="0">
              <properties />
            </test-case>
            <test-case id="2280" name="TestWritingBytesAndReadingSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingBytesAndReadingSegment" methodname="TestWritingBytesAndReadingSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="924050897" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000867" asserts="0">
              <properties />
            </test-case>
            <test-case id="2279" name="TestWritingBytesSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingBytesSegment" methodname="TestWritingBytesSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="658990104" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000842" asserts="0">
              <properties />
            </test-case>
            <test-case id="2278" name="TestWritingHugeArray" fullname="Mirror.Tests.NetworkWriterTest.TestWritingHugeArray" methodname="TestWritingHugeArray" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1167758470" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.014570" asserts="0">
              <properties />
            </test-case>
            <test-case id="2277" name="TestWritingLargeMessage" fullname="Mirror.Tests.NetworkWriterTest.TestWritingLargeMessage" methodname="TestWritingLargeMessage" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2143845707" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001121" asserts="0">
              <properties />
            </test-case>
            <test-case id="2288" name="TestWritingNegativeBytesAndSizeFailure" fullname="Mirror.Tests.NetworkWriterTest.TestWritingNegativeBytesAndSizeFailure" methodname="TestWritingNegativeBytesAndSizeFailure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1548464830" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000856" asserts="0">
              <properties />
            </test-case>
            <test-case id="2281" name="TestWritingSegmentAndReadingSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingSegmentAndReadingSegment" methodname="TestWritingSegmentAndReadingSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="754343389" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000828" asserts="0">
              <properties />
            </test-case>
            <test-case id="2276" name="TestWritingSmallMessage" fullname="Mirror.Tests.NetworkWriterTest.TestWritingSmallMessage" methodname="TestWritingSmallMessage" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1108171307" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.000916" asserts="0">
              <properties />
            </test-case>
            <test-case id="2330" name="TestWritingUri" fullname="Mirror.Tests.NetworkWriterTest.TestWritingUri" methodname="TestWritingUri" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="555327293" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.003843" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2331" name="ScriptableObjectWriterTest" fullname="Mirror.Tests.ScriptableObjectWriterTest" classname="Mirror.Tests.ScriptableObjectWriterTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.010026" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2332" name="TestWriteScriptableObject" fullname="Mirror.Tests.ScriptableObjectWriterTest.TestWriteScriptableObject" methodname="TestWriteScriptableObject" classname="Mirror.Tests.ScriptableObjectWriterTest" runstate="Runnable" seed="1885994225" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.001411" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2333" name="SyncDictionaryTest" fullname="Mirror.Tests.SyncDictionaryTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" testcasecount="26" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:22Z" duration="0.441839" total="26" passed="26" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2347" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncDictionaryTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1442581066" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.011040" asserts="0">
              <properties />
            </test-case>
            <test-case id="2345" name="CallbackTest" fullname="Mirror.Tests.SyncDictionaryTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1859090522" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.016240" asserts="0">
              <properties />
            </test-case>
            <test-case id="2351" name="CopyToOutOfBoundsTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToOutOfBoundsTest" methodname="CopyToOutOfBoundsTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1342037929" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.015772" asserts="0">
              <properties />
            </test-case>
            <test-case id="2350" name="CopyToOutOfRangeTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToOutOfRangeTest" methodname="CopyToOutOfRangeTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1724330096" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.016682" asserts="0">
              <properties />
            </test-case>
            <test-case id="2349" name="CopyToTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToTest" methodname="CopyToTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="130532940" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.015693" asserts="0">
              <properties />
            </test-case>
            <test-case id="2348" name="CountTest" fullname="Mirror.Tests.SyncDictionaryTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1756054191" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.016341" asserts="0">
              <properties />
            </test-case>
            <test-case id="2355" name="DirtyTest" fullname="Mirror.Tests.SyncDictionaryTest.DirtyTest" methodname="DirtyTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1259119681" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:21Z" duration="0.015399" asserts="0">
              <properties />
            </test-case>
            <test-case id="2356" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncDictionaryTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="727243538" result="Passed" start-time="2020-05-02 11:15:21Z" end-time="2020-05-02 11:15:22Z" duration="0.014692" asserts="0">
              <properties />
            </test-case>
            <test-case id="2353" name="ReadOnlyTest" fullname="Mirror.Tests.SyncDictionaryTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="254375201" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016975" asserts="0">
              <properties />
            </test-case>
            <test-case id="2358" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2058936359" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014780" asserts="0">
              <properties />
            </test-case>
            <test-case id="2359" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1826188765" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015975" asserts="0">
              <properties />
            </test-case>
            <test-case id="2357" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="536505986" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014879" asserts="0">
              <properties />
            </test-case>
            <test-case id="2346" name="ServerCallbackTest" fullname="Mirror.Tests.SyncDictionaryTest.ServerCallbackTest" methodname="ServerCallbackTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1633641126" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016226" asserts="0">
              <properties />
            </test-case>
            <test-case id="2335" name="TestAdd" fullname="Mirror.Tests.SyncDictionaryTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1025211717" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014591" asserts="0">
              <properties />
            </test-case>
            <test-case id="2338" name="TestBareSet" fullname="Mirror.Tests.SyncDictionaryTest.TestBareSet" methodname="TestBareSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="447239315" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.017493" asserts="0">
              <properties />
            </test-case>
            <test-case id="2339" name="TestBareSetNull" fullname="Mirror.Tests.SyncDictionaryTest.TestBareSetNull" methodname="TestBareSetNull" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="570655377" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.013589" asserts="0">
              <properties />
            </test-case>
            <test-case id="2336" name="TestClear" fullname="Mirror.Tests.SyncDictionaryTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="523988108" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.017492" asserts="0">
              <properties />
            </test-case>
            <test-case id="2340" name="TestConsecutiveSet" fullname="Mirror.Tests.SyncDictionaryTest.TestConsecutiveSet" methodname="TestConsecutiveSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="587794566" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015008" asserts="0">
              <properties />
            </test-case>
            <test-case id="2344" name="TestContains" fullname="Mirror.Tests.SyncDictionaryTest.TestContains" methodname="TestContains" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1675871740" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016497" asserts="0">
              <properties />
            </test-case>
            <test-case id="2334" name="TestInit" fullname="Mirror.Tests.SyncDictionaryTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2085498527" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015512" asserts="0">
              <properties />
            </test-case>
            <test-case id="2343" name="TestMultSync" fullname="Mirror.Tests.SyncDictionaryTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1266105463" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015972" asserts="0">
              <properties />
            </test-case>
            <test-case id="2341" name="TestNullSet" fullname="Mirror.Tests.SyncDictionaryTest.TestNullSet" methodname="TestNullSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1967285580" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014707" asserts="0">
              <properties />
            </test-case>
            <test-case id="2342" name="TestRemove" fullname="Mirror.Tests.SyncDictionaryTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2122248566" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.017379" asserts="0">
              <properties />
            </test-case>
            <test-case id="2352" name="TestRemovePair" fullname="Mirror.Tests.SyncDictionaryTest.TestRemovePair" methodname="TestRemovePair" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1419778366" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.013888" asserts="0">
              <properties />
            </test-case>
            <test-case id="2337" name="TestSet" fullname="Mirror.Tests.SyncDictionaryTest.TestSet" methodname="TestSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="461196647" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015488" asserts="0">
              <properties />
            </test-case>
            <test-case id="2354" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncDictionaryTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1240874990" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016410" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2360" name="SyncListStructTest" fullname="Mirror.Tests.SyncListStructTest" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.013531" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2361" name="ListIsDirtyWhenModifingAndSettingStruct" fullname="Mirror.Tests.SyncListStructTest.ListIsDirtyWhenModifingAndSettingStruct" methodname="ListIsDirtyWhenModifingAndSettingStruct" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" seed="139951202" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.004976" asserts="0">
              <properties />
            </test-case>
            <test-case id="2362" name="OldValueShouldNotBeNewValue" fullname="Mirror.Tests.SyncListStructTest.OldValueShouldNotBeNewValue" methodname="OldValueShouldNotBeNewValue" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" seed="720033873" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.000768" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2363" name="SyncListTest" fullname="Mirror.Tests.SyncListTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" testcasecount="29" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.497627" total="29" passed="29" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2384" name="CallbackRemoveAtTest" fullname="Mirror.Tests.SyncListTest.CallbackRemoveAtTest" methodname="CallbackRemoveAtTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="412733829" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.018541" asserts="0">
              <properties />
            </test-case>
            <test-case id="2383" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncListTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="412668880" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.017091" asserts="0">
              <properties />
            </test-case>
            <test-case id="2382" name="CallbackTest" fullname="Mirror.Tests.SyncListTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1229284605" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014759" asserts="0">
              <properties />
            </test-case>
            <test-case id="2385" name="CountTest" fullname="Mirror.Tests.SyncListTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="865676486" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015527" asserts="0">
              <properties />
            </test-case>
            <test-case id="2388" name="DirtyTest" fullname="Mirror.Tests.SyncListTest.DirtyTest" methodname="DirtyTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1466527904" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015562" asserts="0">
              <properties />
            </test-case>
            <test-case id="2389" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncListTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1454349982" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016126" asserts="0">
              <properties />
            </test-case>
            <test-case id="2386" name="ReadOnlyTest" fullname="Mirror.Tests.SyncListTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1006246947" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.013697" asserts="0">
              <properties />
            </test-case>
            <test-case id="2391" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncListTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="325838511" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.017532" asserts="0">
              <properties />
            </test-case>
            <test-case id="2392" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncListTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2147218183" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014678" asserts="0">
              <properties />
            </test-case>
            <test-case id="2390" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncListTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1690807983" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016614" asserts="0">
              <properties />
            </test-case>
            <test-case id="2379" name="SyncListBoolTest" fullname="Mirror.Tests.SyncListTest.SyncListBoolTest" methodname="SyncListBoolTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1625979399" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015712" asserts="0">
              <properties />
            </test-case>
            <test-case id="2381" name="SyncListFloatTest" fullname="Mirror.Tests.SyncListTest.SyncListFloatTest" methodname="SyncListFloatTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1187471270" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015370" asserts="0">
              <properties />
            </test-case>
            <test-case id="2378" name="SyncListIntTest" fullname="Mirror.Tests.SyncListTest.SyncListIntTest" methodname="SyncListIntTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="283651088" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016677" asserts="0">
              <properties />
            </test-case>
            <test-case id="2380" name="SyncListUintTest" fullname="Mirror.Tests.SyncListTest.SyncListUintTest" methodname="SyncListUintTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1960803294" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015392" asserts="0">
              <properties />
            </test-case>
            <test-case id="2365" name="TestAdd" fullname="Mirror.Tests.SyncListTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1998907702" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015598" asserts="0">
              <properties />
            </test-case>
            <test-case id="2366" name="TestClear" fullname="Mirror.Tests.SyncListTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="791377824" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015795" asserts="0">
              <properties />
            </test-case>
            <test-case id="2373" name="TestFind" fullname="Mirror.Tests.SyncListTest.TestFind" methodname="TestFind" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1674019545" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015490" asserts="0">
              <properties />
            </test-case>
            <test-case id="2375" name="TestFindAll" fullname="Mirror.Tests.SyncListTest.TestFindAll" methodname="TestFindAll" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1375249811" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015882" asserts="0">
              <properties />
            </test-case>
            <test-case id="2376" name="TestFindAllNonExistent" fullname="Mirror.Tests.SyncListTest.TestFindAllNonExistent" methodname="TestFindAllNonExistent" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1286396234" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016497" asserts="0">
              <properties />
            </test-case>
            <test-case id="2372" name="TestFindIndex" fullname="Mirror.Tests.SyncListTest.TestFindIndex" methodname="TestFindIndex" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1153185147" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014947" asserts="0">
              <properties />
            </test-case>
            <test-case id="2364" name="TestInit" fullname="Mirror.Tests.SyncListTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1893429357" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016483" asserts="0">
              <properties />
            </test-case>
            <test-case id="2367" name="TestInsert" fullname="Mirror.Tests.SyncListTest.TestInsert" methodname="TestInsert" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1761301622" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.013906" asserts="0">
              <properties />
            </test-case>
            <test-case id="2377" name="TestMultSync" fullname="Mirror.Tests.SyncListTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="984948208" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016521" asserts="0">
              <properties />
            </test-case>
            <test-case id="2374" name="TestNoFind" fullname="Mirror.Tests.SyncListTest.TestNoFind" methodname="TestNoFind" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2080436663" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015921" asserts="0">
              <properties />
            </test-case>
            <test-case id="2371" name="TestRemove" fullname="Mirror.Tests.SyncListTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="842697116" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016132" asserts="0">
              <properties />
            </test-case>
            <test-case id="2370" name="TestRemoveAt" fullname="Mirror.Tests.SyncListTest.TestRemoveAt" methodname="TestRemoveAt" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="599936009" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015001" asserts="0">
              <properties />
            </test-case>
            <test-case id="2368" name="TestSet" fullname="Mirror.Tests.SyncListTest.TestSet" methodname="TestSet" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2056530056" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016685" asserts="0">
              <properties />
            </test-case>
            <test-case id="2369" name="TestSetNull" fullname="Mirror.Tests.SyncListTest.TestSetNull" methodname="TestSetNull" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="962884948" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014387" asserts="0">
              <properties />
            </test-case>
            <test-case id="2387" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncListTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1217619340" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016172" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2393" name="SyncSetTest" fullname="Mirror.Tests.SyncSetTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" testcasecount="30" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:23Z" duration="0.495288" total="30" passed="30" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2400" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncSetTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1280538912" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.009393" asserts="0">
              <properties />
            </test-case>
            <test-case id="2399" name="CallbackTest" fullname="Mirror.Tests.SyncSetTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="155295853" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.007281" asserts="0">
              <properties />
            </test-case>
            <test-case id="2401" name="CountTest" fullname="Mirror.Tests.SyncSetTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1334530169" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.016281" asserts="0">
              <properties />
            </test-case>
            <test-case id="2420" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncSetTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="991632821" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.017131" asserts="0">
              <properties />
            </test-case>
            <test-case id="2418" name="ReadOnlyTest" fullname="Mirror.Tests.SyncSetTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="614941634" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.015190" asserts="0">
              <properties />
            </test-case>
            <test-case id="2422" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncSetTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="490834995" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014628" asserts="0">
              <properties />
            </test-case>
            <test-case id="2423" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncSetTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="2049079193" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.017000" asserts="0">
              <properties />
            </test-case>
            <test-case id="2421" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncSetTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1763148931" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:22Z" duration="0.014866" asserts="0">
              <properties />
            </test-case>
            <test-case id="2395" name="TestAdd" fullname="Mirror.Tests.SyncSetTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="285839253" result="Passed" start-time="2020-05-02 11:15:22Z" end-time="2020-05-02 11:15:23Z" duration="0.015725" asserts="0">
              <properties />
            </test-case>
            <test-case id="2396" name="TestClear" fullname="Mirror.Tests.SyncSetTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="2131809925" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015492" asserts="0">
              <properties />
            </test-case>
            <test-case id="2402" name="TestExceptWith" fullname="Mirror.Tests.SyncSetTest.TestExceptWith" methodname="TestExceptWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="281456443" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.017413" asserts="0">
              <properties />
            </test-case>
            <test-case id="2403" name="TestExceptWithSelf" fullname="Mirror.Tests.SyncSetTest.TestExceptWithSelf" methodname="TestExceptWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1646490864" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015097" asserts="0">
              <properties />
            </test-case>
            <test-case id="2394" name="TestInit" fullname="Mirror.Tests.SyncSetTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1705560752" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.014286" asserts="0">
              <properties />
            </test-case>
            <test-case id="2404" name="TestIntersectWith" fullname="Mirror.Tests.SyncSetTest.TestIntersectWith" methodname="TestIntersectWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="278053849" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.016821" asserts="0">
              <properties />
            </test-case>
            <test-case id="2405" name="TestIntersectWithSet" fullname="Mirror.Tests.SyncSetTest.TestIntersectWithSet" methodname="TestIntersectWithSet" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1839264689" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.014578" asserts="0">
              <properties />
            </test-case>
            <test-case id="2408" name="TestIsNotProperSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsNotProperSubsetOf" methodname="TestIsNotProperSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="832253677" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.016801" asserts="0">
              <properties />
            </test-case>
            <test-case id="2406" name="TestIsProperSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsProperSubsetOf" methodname="TestIsProperSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1774497705" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015008" asserts="0">
              <properties />
            </test-case>
            <test-case id="2407" name="TestIsProperSubsetOfSet" fullname="Mirror.Tests.SyncSetTest.TestIsProperSubsetOfSet" methodname="TestIsProperSubsetOfSet" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1249320121" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.016084" asserts="0">
              <properties />
            </test-case>
            <test-case id="2409" name="TestIsProperSuperSetOf" fullname="Mirror.Tests.SyncSetTest.TestIsProperSuperSetOf" methodname="TestIsProperSuperSetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1414111389" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.016039" asserts="0">
              <properties />
            </test-case>
            <test-case id="2410" name="TestIsSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsSubsetOf" methodname="TestIsSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="881182366" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.014789" asserts="0">
              <properties />
            </test-case>
            <test-case id="2411" name="TestIsSupersetOf" fullname="Mirror.Tests.SyncSetTest.TestIsSupersetOf" methodname="TestIsSupersetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="330311333" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015554" asserts="0">
              <properties />
            </test-case>
            <test-case id="2398" name="TestMultSync" fullname="Mirror.Tests.SyncSetTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="31844351" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.016820" asserts="0">
              <properties />
            </test-case>
            <test-case id="2412" name="TestOverlaps" fullname="Mirror.Tests.SyncSetTest.TestOverlaps" methodname="TestOverlaps" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1252310360" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015404" asserts="0">
              <properties />
            </test-case>
            <test-case id="2397" name="TestRemove" fullname="Mirror.Tests.SyncSetTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="977570148" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015134" asserts="0">
              <properties />
            </test-case>
            <test-case id="2413" name="TestSetEquals" fullname="Mirror.Tests.SyncSetTest.TestSetEquals" methodname="TestSetEquals" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="305276713" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.017019" asserts="0">
              <properties />
            </test-case>
            <test-case id="2414" name="TestSymmetricExceptWith" fullname="Mirror.Tests.SyncSetTest.TestSymmetricExceptWith" methodname="TestSymmetricExceptWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="413581899" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015126" asserts="0">
              <properties />
            </test-case>
            <test-case id="2415" name="TestSymmetricExceptWithSelf" fullname="Mirror.Tests.SyncSetTest.TestSymmetricExceptWithSelf" methodname="TestSymmetricExceptWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1102150376" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015628" asserts="0">
              <properties />
            </test-case>
            <test-case id="2416" name="TestUnionWith" fullname="Mirror.Tests.SyncSetTest.TestUnionWith" methodname="TestUnionWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="871099575" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015692" asserts="0">
              <properties />
            </test-case>
            <test-case id="2417" name="TestUnionWithSelf" fullname="Mirror.Tests.SyncSetTest.TestUnionWithSelf" methodname="TestUnionWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="212457455" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015534" asserts="0">
              <properties />
            </test-case>
            <test-case id="2419" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncSetTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1656912068" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015306" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2424" name="SyncVarTest" fullname="Mirror.Tests.SyncVarTest" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.011423" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2425" name="TestSettingStruct" fullname="Mirror.Tests.SyncVarTest.TestSettingStruct" methodname="TestSettingStruct" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1147349846" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.002097" asserts="0">
              <properties />
            </test-case>
            <test-case id="2428" name="TestSynchronizingObjects" fullname="Mirror.Tests.SyncVarTest.TestSynchronizingObjects" methodname="TestSynchronizingObjects" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="202772193" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.001196" asserts="0">
              <properties />
            </test-case>
            <test-case id="2427" name="TestSyncIntervalAndClearAllComponents" fullname="Mirror.Tests.SyncVarTest.TestSyncIntervalAndClearAllComponents" methodname="TestSyncIntervalAndClearAllComponents" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1900298449" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.000663" asserts="0">
              <properties />
            </test-case>
            <test-case id="2426" name="TestSyncIntervalAndClearDirtyComponents" fullname="Mirror.Tests.SyncVarTest.TestSyncIntervalAndClearDirtyComponents" methodname="TestSyncIntervalAndClearDirtyComponents" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1894108092" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.000689" asserts="0">
              <properties />
            </test-case>
            <test-case id="2429" name="TestSyncModeObserversMask" fullname="Mirror.Tests.SyncVarTest.TestSyncModeObserversMask" methodname="TestSyncModeObserversMask" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="2074078349" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.000658" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2430" name="SyncVarVirtualTest" fullname="Mirror.Tests.SyncVarVirtualTest" classname="Mirror.Tests.SyncVarVirtualTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.074632" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2431" name="abstractMethodOnChangeWorkWithHooks" fullname="Mirror.Tests.SyncVarVirtualTest.abstractMethodOnChangeWorkWithHooks" methodname="abstractMethodOnChangeWorkWithHooks" classname="Mirror.Tests.SyncVarVirtualTest" runstate="Runnable" seed="1274965245" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.019120" asserts="0">
              <properties />
            </test-case>
            <test-case id="2433" name="manuallyCallingVirtualMethodCallsOverride" fullname="Mirror.Tests.SyncVarVirtualTest.manuallyCallingVirtualMethodCallsOverride" methodname="manuallyCallingVirtualMethodCallsOverride" classname="Mirror.Tests.SyncVarVirtualTest" runstate="Runnable" seed="873239438" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.015850" asserts="0">
              <properties />
            </test-case>
            <test-case id="2434" name="manuallyCallingVirtualMethodInsideBaseClassCallsOverride" fullname="Mirror.Tests.SyncVarVirtualTest.manuallyCallingVirtualMethodInsideBaseClassCallsOverride" methodname="manuallyCallingVirtualMethodInsideBaseClassCallsOverride" classname="Mirror.Tests.SyncVarVirtualTest" runstate="Runnable" seed="210028514" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.014835" asserts="0">
              <properties />
            </test-case>
            <test-case id="2432" name="virtualMethodOnChangeWorkWithHooks" fullname="Mirror.Tests.SyncVarVirtualTest.virtualMethodOnChangeWorkWithHooks" methodname="virtualMethodOnChangeWorkWithHooks" classname="Mirror.Tests.SyncVarVirtualTest" runstate="Runnable" seed="1154993838" result="Passed" start-time="2020-05-02 11:15:23Z" end-time="2020-05-02 11:15:23Z" duration="0.010947" asserts="0">
              <properties />
            </test-case>
          </test-suite>
        </test-suite>
        <test-suite type="TestSuite" id="2464" name="Weaver" fullname="Mirror.Weaver" runstate="Runnable" testcasecount="146" result="Passed" start-time="2020-05-02 11:15:24Z" end-time="2020-05-02 11:16:36Z" duration="71.935305" total="146" passed="146" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="2465" name="Tests" fullname="Mirror.Weaver.Tests" runstate="Runnable" testcasecount="146" result="Passed" start-time="2020-05-02 11:15:24Z" end-time="2020-05-02 11:16:36Z" duration="71.704452" total="146" passed="146" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="1769" name="WeaverClientRpcTests" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-05-02 11:15:24Z" end-time="2020-05-02 11:15:25Z" duration="1.356362" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1772" name="ClientRpcCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcCantBeStatic" methodname="ClientRpcCantBeStatic" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="2123421386" result="Passed" start-time="2020-05-02 11:15:24Z" end-time="2020-05-02 11:15:24Z" duration="0.460664" asserts="0">
                <properties />
              </test-case>
              <test-case id="1771" name="ClientRpcStartsWithRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcStartsWithRpc" methodname="ClientRpcStartsWithRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="108529361" result="Passed" start-time="2020-05-02 11:15:24Z" end-time="2020-05-02 11:15:25Z" duration="0.323129" asserts="0">
                <properties />
              </test-case>
              <test-case id="1770" name="ClientRpcValid" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcValid" methodname="ClientRpcValid" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1393685208" result="Passed" start-time="2020-05-02 11:15:25Z" end-time="2020-05-02 11:15:25Z" duration="0.414353" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1773" name="WeaverClientServerAttributeTests" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:25Z" end-time="2020-05-02 11:15:26Z" duration="0.813561" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1775" name="NetworkBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.NetworkBehaviourClient" methodname="NetworkBehaviourClient" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1982828648" result="Passed" start-time="2020-05-02 11:15:25Z" end-time="2020-05-02 11:15:26Z" duration="0.337765" asserts="0">
                <properties />
              </test-case>
              <test-case id="1774" name="NetworkBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.NetworkBehaviourServer" methodname="NetworkBehaviourServer" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1588116701" result="Passed" start-time="2020-05-02 11:15:26Z" end-time="2020-05-02 11:15:26Z" duration="0.323745" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1776" name="WeaverCommandTests" fullname="Mirror.Weaver.Tests.WeaverCommandTests" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-05-02 11:15:26Z" end-time="2020-05-02 11:15:27Z" duration="1.176710" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1779" name="CommandCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandCantBeStatic" methodname="CommandCantBeStatic" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="112259384" result="Passed" start-time="2020-05-02 11:15:26Z" end-time="2020-05-02 11:15:26Z" duration="0.324738" asserts="0">
                <properties />
              </test-case>
              <test-case id="1778" name="CommandStartsWithCmd" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandStartsWithCmd" methodname="CommandStartsWithCmd" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1401464110" result="Passed" start-time="2020-05-02 11:15:26Z" end-time="2020-05-02 11:15:27Z" duration="0.354697" asserts="0">
                <properties />
              </test-case>
              <test-case id="1777" name="CommandValid" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandValid" methodname="CommandValid" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1515786696" result="Passed" start-time="2020-05-02 11:15:27Z" end-time="2020-05-02 11:15:27Z" duration="0.338924" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1780" name="WeaverGeneralTests" fullname="Mirror.Weaver.Tests.WeaverGeneralTests" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-05-02 11:15:27Z" end-time="2020-05-02 11:15:28Z" duration="0.865421" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1781" name="RecursionCount" fullname="Mirror.Weaver.Tests.WeaverGeneralTests.RecursionCount" methodname="RecursionCount" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" seed="983094075" result="Passed" start-time="2020-05-02 11:15:27Z" end-time="2020-05-02 11:15:28Z" duration="0.368956" asserts="0">
                <properties />
              </test-case>
              <test-case id="1782" name="TestingScriptableObjectArraySerialization" fullname="Mirror.Weaver.Tests.WeaverGeneralTests.TestingScriptableObjectArraySerialization" methodname="TestingScriptableObjectArraySerialization" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" seed="1324343908" result="Passed" start-time="2020-05-02 11:15:28Z" end-time="2020-05-02 11:15:28Z" duration="0.339966" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1783" name="WeaverGeneratedReaderWriterTests" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" testcasecount="18" result="Passed" start-time="2020-05-02 11:15:28Z" end-time="2020-05-02 11:15:36Z" duration="7.864699" total="18" passed="18" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1800" name="CanUseCustomReadWriteForInterfaces" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CanUseCustomReadWriteForInterfaces" methodname="CanUseCustomReadWriteForInterfaces" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="761166322" result="Passed" start-time="2020-05-02 11:15:28Z" end-time="2020-05-02 11:15:29Z" duration="0.425828" asserts="0">
                <properties />
              </test-case>
              <test-case id="1792" name="CanUseCustomReadWriteForTypesFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CanUseCustomReadWriteForTypesFromDifferentAssemblies" methodname="CanUseCustomReadWriteForTypesFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1820295055" result="Passed" start-time="2020-05-02 11:15:29Z" end-time="2020-05-02 11:15:29Z" duration="0.418588" asserts="0">
                <properties />
              </test-case>
              <test-case id="1785" name="CreatesForClass" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClass" methodname="CreatesForClass" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1137985555" result="Passed" start-time="2020-05-02 11:15:29Z" end-time="2020-05-02 11:15:29Z" duration="0.446666" asserts="0">
                <properties />
              </test-case>
              <test-case id="1790" name="CreatesForClassFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassFromDifferentAssemblies" methodname="CreatesForClassFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1332087959" result="Passed" start-time="2020-05-02 11:15:29Z" end-time="2020-05-02 11:15:30Z" duration="0.423508" asserts="0">
                <properties />
              </test-case>
              <test-case id="1791" name="CreatesForClassFromDifferentAssembliesWithValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassFromDifferentAssembliesWithValidConstructor" methodname="CreatesForClassFromDifferentAssembliesWithValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1929969853" result="Passed" start-time="2020-05-02 11:15:30Z" end-time="2020-05-02 11:15:30Z" duration="0.414329" asserts="0">
                <properties />
              </test-case>
              <test-case id="1786" name="CreatesForClassWithValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassWithValidConstructor" methodname="CreatesForClassWithValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1594648908" result="Passed" start-time="2020-05-02 11:15:30Z" end-time="2020-05-02 11:15:31Z" duration="0.435111" asserts="0">
                <properties />
              </test-case>
              <test-case id="1801" name="CreatesForEnums" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForEnums" methodname="CreatesForEnums" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="440655741" result="Passed" start-time="2020-05-02 11:15:31Z" end-time="2020-05-02 11:15:31Z" duration="0.423073" asserts="0">
                <properties />
              </test-case>
              <test-case id="1788" name="CreatesForInheritedFromScriptableObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForInheritedFromScriptableObject" methodname="CreatesForInheritedFromScriptableObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1704283014" result="Passed" start-time="2020-05-02 11:15:31Z" end-time="2020-05-02 11:15:32Z" duration="0.435053" asserts="0">
                <properties />
              </test-case>
              <test-case id="1789" name="CreatesForStructFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructFromDifferentAssemblies" methodname="CreatesForStructFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="2137896490" result="Passed" start-time="2020-05-02 11:15:32Z" end-time="2020-05-02 11:15:32Z" duration="0.430045" asserts="0">
                <properties />
              </test-case>
              <test-case id="1784" name="CreatesForStructs" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructs" methodname="CreatesForStructs" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1691248221" result="Passed" start-time="2020-05-02 11:15:32Z" end-time="2020-05-02 11:15:33Z" duration="0.439445" asserts="0">
                <properties />
              </test-case>
              <test-case id="1798" name="ExcludesNonSerializedFields" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.ExcludesNonSerializedFields" methodname="ExcludesNonSerializedFields" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1380483622" result="Passed" start-time="2020-05-02 11:15:33Z" end-time="2020-05-02 11:15:33Z" duration="0.422984" asserts="0">
                <properties />
              </test-case>
              <test-case id="1787" name="GivesErrorForClassWithNoValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForClassWithNoValidConstructor" methodname="GivesErrorForClassWithNoValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1498299099" result="Passed" start-time="2020-05-02 11:15:33Z" end-time="2020-05-02 11:15:33Z" duration="0.426771" asserts="0">
                <properties />
              </test-case>
              <test-case id="1799" name="GivesErrorWhenUsingInterface" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingInterface" methodname="GivesErrorWhenUsingInterface" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1094769829" result="Passed" start-time="2020-05-02 11:15:33Z" end-time="2020-05-02 11:15:34Z" duration="0.411670" asserts="0">
                <properties />
              </test-case>
              <test-case id="1796" name="GivesErrorWhenUsingMonoBehaviour" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingMonoBehaviour" methodname="GivesErrorWhenUsingMonoBehaviour" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1726168665" result="Passed" start-time="2020-05-02 11:15:34Z" end-time="2020-05-02 11:15:34Z" duration="0.410064" asserts="0">
                <properties />
              </test-case>
              <test-case id="1794" name="GivesErrorWhenUsingObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingObject" methodname="GivesErrorWhenUsingObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="877345444" result="Passed" start-time="2020-05-02 11:15:34Z" end-time="2020-05-02 11:15:35Z" duration="0.427835" asserts="0">
                <properties />
              </test-case>
              <test-case id="1795" name="GivesErrorWhenUsingScriptableObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingScriptableObject" methodname="GivesErrorWhenUsingScriptableObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="2060604431" result="Passed" start-time="2020-05-02 11:15:35Z" end-time="2020-05-02 11:15:35Z" duration="0.414701" asserts="0">
                <properties />
              </test-case>
              <test-case id="1797" name="GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" methodname="GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="139605053" result="Passed" start-time="2020-05-02 11:15:35Z" end-time="2020-05-02 11:15:35Z" duration="0.426936" asserts="0">
                <properties />
              </test-case>
              <test-case id="1793" name="GivesErrorWhenUsingUnityAsset" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingUnityAsset" methodname="GivesErrorWhenUsingUnityAsset" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="552439210" result="Passed" start-time="2020-05-02 11:15:35Z" end-time="2020-05-02 11:15:36Z" duration="0.446948" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1802" name="WeaverMessageTests" fullname="Mirror.Weaver.Tests.WeaverMessageTests" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-05-02 11:15:36Z" end-time="2020-05-02 11:15:38Z" duration="2.086058" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1805" name="MessageMemberGeneric" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageMemberGeneric" methodname="MessageMemberGeneric" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="454321597" result="Passed" start-time="2020-05-02 11:15:36Z" end-time="2020-05-02 11:15:37Z" duration="0.428337" asserts="0">
                <properties />
              </test-case>
              <test-case id="1806" name="MessageMemberInterface" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageMemberInterface" methodname="MessageMemberInterface" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="33065554" result="Passed" start-time="2020-05-02 11:15:37Z" end-time="2020-05-02 11:15:37Z" duration="0.498749" asserts="0">
                <properties />
              </test-case>
              <test-case id="1804" name="MessageSelfReferencing" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageSelfReferencing" methodname="MessageSelfReferencing" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="877286046" result="Passed" start-time="2020-05-02 11:15:37Z" end-time="2020-05-02 11:15:38Z" duration="0.498738" asserts="0">
                <properties />
              </test-case>
              <test-case id="1803" name="MessageValid" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageValid" methodname="MessageValid" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1320873914" result="Passed" start-time="2020-05-02 11:15:38Z" end-time="2020-05-02 11:15:38Z" duration="0.499213" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1807" name="WeaverMonoBehaviourTests" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" testcasecount="10" result="Passed" start-time="2020-05-02 11:15:38Z" end-time="2020-05-02 11:15:43Z" duration="5.294854" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1816" name="MonoBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClient" methodname="MonoBehaviourClient" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1614656060" result="Passed" start-time="2020-05-02 11:15:38Z" end-time="2020-05-02 11:15:39Z" duration="0.535732" asserts="0">
                <properties />
              </test-case>
              <test-case id="1817" name="MonoBehaviourClientCallback" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClientCallback" methodname="MonoBehaviourClientCallback" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="976903684" result="Passed" start-time="2020-05-02 11:15:39Z" end-time="2020-05-02 11:15:39Z" duration="0.498914" asserts="0">
                <properties />
              </test-case>
              <test-case id="1812" name="MonoBehaviourClientRpc" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClientRpc" methodname="MonoBehaviourClientRpc" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1097263717" result="Passed" start-time="2020-05-02 11:15:39Z" end-time="2020-05-02 11:15:40Z" duration="0.498397" asserts="0">
                <properties />
              </test-case>
              <test-case id="1811" name="MonoBehaviourCommand" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourCommand" methodname="MonoBehaviourCommand" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1322646514" result="Passed" start-time="2020-05-02 11:15:40Z" end-time="2020-05-02 11:15:40Z" duration="0.499932" asserts="0">
                <properties />
              </test-case>
              <test-case id="1814" name="MonoBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourServer" methodname="MonoBehaviourServer" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="299524675" result="Passed" start-time="2020-05-02 11:15:40Z" end-time="2020-05-02 11:15:41Z" duration="0.497620" asserts="0">
                <properties />
              </test-case>
              <test-case id="1815" name="MonoBehaviourServerCallback" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourServerCallback" methodname="MonoBehaviourServerCallback" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="2089897605" result="Passed" start-time="2020-05-02 11:15:41Z" end-time="2020-05-02 11:15:41Z" duration="0.499412" asserts="0">
                <properties />
              </test-case>
              <test-case id="1810" name="MonoBehaviourSyncList" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourSyncList" methodname="MonoBehaviourSyncList" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1896075811" result="Passed" start-time="2020-05-02 11:15:41Z" end-time="2020-05-02 11:15:42Z" duration="0.497442" asserts="0">
                <properties />
              </test-case>
              <test-case id="1809" name="MonoBehaviourSyncVar" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourSyncVar" methodname="MonoBehaviourSyncVar" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1403397866" result="Passed" start-time="2020-05-02 11:15:42Z" end-time="2020-05-02 11:15:42Z" duration="0.499562" asserts="0">
                <properties />
              </test-case>
              <test-case id="1813" name="MonoBehaviourTargetRpc" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourTargetRpc" methodname="MonoBehaviourTargetRpc" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1833212167" result="Passed" start-time="2020-05-02 11:15:42Z" end-time="2020-05-02 11:15:43Z" duration="0.498997" asserts="0">
                <properties />
              </test-case>
              <test-case id="1808" name="MonoBehaviourValid" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourValid" methodname="MonoBehaviourValid" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="2128523105" result="Passed" start-time="2020-05-02 11:15:43Z" end-time="2020-05-02 11:15:43Z" duration="0.498976" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1818" name="WeaverNetworkBehaviourTests" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" testcasecount="33" result="Passed" start-time="2020-05-02 11:15:43Z" end-time="2020-05-02 11:15:59Z" duration="15.381795" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1820" name="NetworkBehaviourAbstractBaseValid" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourAbstractBaseValid" methodname="NetworkBehaviourAbstractBaseValid" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1324435599" result="Passed" start-time="2020-05-02 11:15:44Z" end-time="2020-05-02 11:15:44Z" duration="0.546759" asserts="0">
                <properties />
              </test-case>
              <test-case id="1836" name="NetworkBehaviourClientRpcCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcCoroutine" methodname="NetworkBehaviourClientRpcCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1873450521" result="Passed" start-time="2020-05-02 11:15:44Z" end-time="2020-05-02 11:15:45Z" duration="0.498859" asserts="0">
                <properties />
              </test-case>
              <test-case id="1844" name="NetworkBehaviourClientRpcDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcDuplicateName" methodname="NetworkBehaviourClientRpcDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="907132967" result="Passed" start-time="2020-05-02 11:15:45Z" end-time="2020-05-02 11:15:45Z" duration="0.498135" asserts="0">
                <properties />
              </test-case>
              <test-case id="1835" name="NetworkBehaviourClientRpcGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcGenericParam" methodname="NetworkBehaviourClientRpcGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="875007139" result="Passed" start-time="2020-05-02 11:15:45Z" end-time="2020-05-02 11:15:46Z" duration="0.498894" asserts="0">
                <properties />
              </test-case>
              <test-case id="1841" name="NetworkBehaviourClientRpcParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamAbstract" methodname="NetworkBehaviourClientRpcParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="686177506" result="Passed" start-time="2020-05-02 11:15:46Z" end-time="2020-05-02 11:15:46Z" duration="0.498413" asserts="0">
                <properties />
              </test-case>
              <test-case id="1842" name="NetworkBehaviourClientRpcParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamComponent" methodname="NetworkBehaviourClientRpcParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1990330628" result="Passed" start-time="2020-05-02 11:15:46Z" end-time="2020-05-02 11:15:47Z" duration="0.498338" asserts="0">
                <properties />
              </test-case>
              <test-case id="1843" name="NetworkBehaviourClientRpcParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamNetworkConnection" methodname="NetworkBehaviourClientRpcParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1000543987" result="Passed" start-time="2020-05-02 11:15:47Z" end-time="2020-05-02 11:15:47Z" duration="0.498303" asserts="0">
                <properties />
              </test-case>
              <test-case id="1839" name="NetworkBehaviourClientRpcParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOptional" methodname="NetworkBehaviourClientRpcParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1403193221" result="Passed" start-time="2020-05-02 11:15:47Z" end-time="2020-05-02 11:15:48Z" duration="0.497314" asserts="0">
                <properties />
              </test-case>
              <test-case id="1838" name="NetworkBehaviourClientRpcParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOut" methodname="NetworkBehaviourClientRpcParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1469882934" result="Passed" start-time="2020-05-02 11:15:48Z" end-time="2020-05-02 11:15:48Z" duration="0.499709" asserts="0">
                <properties />
              </test-case>
              <test-case id="1840" name="NetworkBehaviourClientRpcParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamRef" methodname="NetworkBehaviourClientRpcParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="645763367" result="Passed" start-time="2020-05-02 11:15:48Z" end-time="2020-05-02 11:15:49Z" duration="0.497233" asserts="0">
                <properties />
              </test-case>
              <test-case id="1837" name="NetworkBehaviourClientRpcVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcVoidReturn" methodname="NetworkBehaviourClientRpcVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1295141820" result="Passed" start-time="2020-05-02 11:15:49Z" end-time="2020-05-02 11:15:49Z" duration="0.499319" asserts="0">
                <properties />
              </test-case>
              <test-case id="1823" name="NetworkBehaviourCmdCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdCoroutine" methodname="NetworkBehaviourCmdCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="179328112" result="Passed" start-time="2020-05-02 11:15:49Z" end-time="2020-05-02 11:15:50Z" duration="0.498031" asserts="0">
                <properties />
              </test-case>
              <test-case id="1851" name="NetworkBehaviourCmdDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdDuplicateName" methodname="NetworkBehaviourCmdDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="957792050" result="Passed" start-time="2020-05-02 11:15:50Z" end-time="2020-05-02 11:15:50Z" duration="0.498363" asserts="0">
                <properties />
              </test-case>
              <test-case id="1822" name="NetworkBehaviourCmdGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdGenericParam" methodname="NetworkBehaviourCmdGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1906873080" result="Passed" start-time="2020-05-02 11:15:50Z" end-time="2020-05-02 11:15:51Z" duration="0.499228" asserts="0">
                <properties />
              </test-case>
              <test-case id="1848" name="NetworkBehaviourCmdParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract" methodname="NetworkBehaviourCmdParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1224534652" result="Passed" start-time="2020-05-02 11:15:51Z" end-time="2020-05-02 11:15:51Z" duration="0.497070" asserts="0">
                <properties />
              </test-case>
              <test-case id="1849" name="NetworkBehaviourCmdParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent" methodname="NetworkBehaviourCmdParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1619721566" result="Passed" start-time="2020-05-02 11:15:51Z" end-time="2020-05-02 11:15:52Z" duration="0.498182" asserts="0">
                <properties />
              </test-case>
              <test-case id="1850" name="NetworkBehaviourCmdParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamNetworkConnection" methodname="NetworkBehaviourCmdParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1694760397" result="Passed" start-time="2020-05-02 11:15:52Z" end-time="2020-05-02 11:15:52Z" duration="0.498872" asserts="0">
                <properties />
              </test-case>
              <test-case id="1846" name="NetworkBehaviourCmdParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOptional" methodname="NetworkBehaviourCmdParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="28250812" result="Passed" start-time="2020-05-02 11:15:52Z" end-time="2020-05-02 11:15:53Z" duration="0.498808" asserts="0">
                <properties />
              </test-case>
              <test-case id="1845" name="NetworkBehaviourCmdParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOut" methodname="NetworkBehaviourCmdParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1090245129" result="Passed" start-time="2020-05-02 11:15:53Z" end-time="2020-05-02 11:15:53Z" duration="0.498892" asserts="0">
                <properties />
              </test-case>
              <test-case id="1847" name="NetworkBehaviourCmdParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamRef" methodname="NetworkBehaviourCmdParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1971347446" result="Passed" start-time="2020-05-02 11:15:53Z" end-time="2020-05-02 11:15:54Z" duration="0.497503" asserts="0">
                <properties />
              </test-case>
              <test-case id="1824" name="NetworkBehaviourCmdVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdVoidReturn" methodname="NetworkBehaviourCmdVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="357370994" result="Passed" start-time="2020-05-02 11:15:54Z" end-time="2020-05-02 11:15:54Z" duration="0.498243" asserts="0">
                <properties />
              </test-case>
              <test-case id="1821" name="NetworkBehaviourGeneric" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourGeneric" methodname="NetworkBehaviourGeneric" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="541917797" result="Passed" start-time="2020-05-02 11:15:54Z" end-time="2020-05-02 11:15:55Z" duration="0.436046" asserts="0">
                <properties />
              </test-case>
              <test-case id="1826" name="NetworkBehaviourTargetRpcCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcCoroutine" methodname="NetworkBehaviourTargetRpcCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="866290910" result="Passed" start-time="2020-05-02 11:15:55Z" end-time="2020-05-02 11:15:55Z" duration="0.398611" asserts="0">
                <properties />
              </test-case>
              <test-case id="1834" name="NetworkBehaviourTargetRpcDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcDuplicateName" methodname="NetworkBehaviourTargetRpcDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="730621821" result="Passed" start-time="2020-05-02 11:15:55Z" end-time="2020-05-02 11:15:55Z" duration="0.366568" asserts="0">
                <properties />
              </test-case>
              <test-case id="1825" name="NetworkBehaviourTargetRpcGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcGenericParam" methodname="NetworkBehaviourTargetRpcGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1141823745" result="Passed" start-time="2020-05-02 11:15:55Z" end-time="2020-05-02 11:15:56Z" duration="0.355335" asserts="0">
                <properties />
              </test-case>
              <test-case id="1831" name="NetworkBehaviourTargetRpcParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract" methodname="NetworkBehaviourTargetRpcParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="260454084" result="Passed" start-time="2020-05-02 11:15:56Z" end-time="2020-05-02 11:15:56Z" duration="0.366730" asserts="0">
                <properties />
              </test-case>
              <test-case id="1832" name="NetworkBehaviourTargetRpcParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent" methodname="NetworkBehaviourTargetRpcParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1545641829" result="Passed" start-time="2020-05-02 11:15:56Z" end-time="2020-05-02 11:15:56Z" duration="0.350857" asserts="0">
                <properties />
              </test-case>
              <test-case id="1833" name="NetworkBehaviourTargetRpcParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamNetworkConnection" methodname="NetworkBehaviourTargetRpcParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1807699598" result="Passed" start-time="2020-05-02 11:15:56Z" end-time="2020-05-02 11:15:57Z" duration="0.338485" asserts="0">
                <properties />
              </test-case>
              <test-case id="1829" name="NetworkBehaviourTargetRpcParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOptional" methodname="NetworkBehaviourTargetRpcParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="331284026" result="Passed" start-time="2020-05-02 11:15:57Z" end-time="2020-05-02 11:15:57Z" duration="0.335094" asserts="0">
                <properties />
              </test-case>
              <test-case id="1828" name="NetworkBehaviourTargetRpcParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOut" methodname="NetworkBehaviourTargetRpcParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1348337352" result="Passed" start-time="2020-05-02 11:15:57Z" end-time="2020-05-02 11:15:57Z" duration="0.363254" asserts="0">
                <properties />
              </test-case>
              <test-case id="1830" name="NetworkBehaviourTargetRpcParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamRef" methodname="NetworkBehaviourTargetRpcParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1402836288" result="Passed" start-time="2020-05-02 11:15:57Z" end-time="2020-05-02 11:15:58Z" duration="0.370867" asserts="0">
                <properties />
              </test-case>
              <test-case id="1827" name="NetworkBehaviourTargetRpcVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcVoidReturn" methodname="NetworkBehaviourTargetRpcVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1598221046" result="Passed" start-time="2020-05-02 11:15:58Z" end-time="2020-05-02 11:15:58Z" duration="0.399553" asserts="0">
                <properties />
              </test-case>
              <test-case id="1819" name="NetworkBehaviourValid" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourValid" methodname="NetworkBehaviourValid" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1299805992" result="Passed" start-time="2020-05-02 11:15:58Z" end-time="2020-05-02 11:15:59Z" duration="0.499719" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1852" name="WeaverSyncDictionaryTests" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" testcasecount="21" result="Passed" start-time="2020-05-02 11:15:59Z" end-time="2020-05-02 11:16:10Z" duration="10.765963" total="21" passed="21" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1853" name="SyncDictionary" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionary" methodname="SyncDictionary" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1604039861" result="Passed" start-time="2020-05-02 11:15:59Z" end-time="2020-05-02 11:16:00Z" duration="0.544202" asserts="0">
                <properties />
              </test-case>
              <test-case id="1866" name="SyncDictionaryErrorForGenericStructItem" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItem" methodname="SyncDictionaryErrorForGenericStructItem" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="797520639" result="Passed" start-time="2020-05-02 11:16:00Z" end-time="2020-05-02 11:16:00Z" duration="0.498617" asserts="0">
                <properties />
              </test-case>
              <test-case id="1868" name="SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" methodname="SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="787811874" result="Passed" start-time="2020-05-02 11:16:00Z" end-time="2020-05-02 11:16:01Z" duration="0.500559" asserts="0">
                <properties />
              </test-case>
              <test-case id="1870" name="SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" methodname="SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1801257679" result="Passed" start-time="2020-05-02 11:16:01Z" end-time="2020-05-02 11:16:01Z" duration="0.496763" asserts="0">
                <properties />
              </test-case>
              <test-case id="1865" name="SyncDictionaryErrorForGenericStructKey" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKey" methodname="SyncDictionaryErrorForGenericStructKey" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="21652375" result="Passed" start-time="2020-05-02 11:16:01Z" end-time="2020-05-02 11:16:02Z" duration="0.498267" asserts="0">
                <properties />
              </test-case>
              <test-case id="1867" name="SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" methodname="SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="517983776" result="Passed" start-time="2020-05-02 11:16:02Z" end-time="2020-05-02 11:16:02Z" duration="0.499573" asserts="0">
                <properties />
              </test-case>
              <test-case id="1869" name="SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" methodname="SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="769723425" result="Passed" start-time="2020-05-02 11:16:02Z" end-time="2020-05-02 11:16:03Z" duration="0.498492" asserts="0">
                <properties />
              </test-case>
              <test-case id="1873" name="SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" methodname="SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1570036408" result="Passed" start-time="2020-05-02 11:16:03Z" end-time="2020-05-02 11:16:03Z" duration="0.497114" asserts="0">
                <properties />
              </test-case>
              <test-case id="1854" name="SyncDictionaryGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericAbstractInheritance" methodname="SyncDictionaryGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="444272057" result="Passed" start-time="2020-05-02 11:16:03Z" end-time="2020-05-02 11:16:04Z" duration="0.498221" asserts="0">
                <properties />
              </test-case>
              <test-case id="1855" name="SyncDictionaryGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericInheritance" methodname="SyncDictionaryGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="285018433" result="Passed" start-time="2020-05-02 11:16:04Z" end-time="2020-05-02 11:16:04Z" duration="0.497889" asserts="0">
                <properties />
              </test-case>
              <test-case id="1872" name="SyncDictionaryGenericStructItemWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericStructItemWithCustomMethods" methodname="SyncDictionaryGenericStructItemWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1630129687" result="Passed" start-time="2020-05-02 11:16:04Z" end-time="2020-05-02 11:16:05Z" duration="0.499493" asserts="0">
                <properties />
              </test-case>
              <test-case id="1871" name="SyncDictionaryGenericStructKeyWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericStructKeyWithCustomMethods" methodname="SyncDictionaryGenericStructKeyWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1031458991" result="Passed" start-time="2020-05-02 11:16:05Z" end-time="2020-05-02 11:16:05Z" duration="0.498545" asserts="0">
                <properties />
              </test-case>
              <test-case id="1856" name="SyncDictionaryInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryInheritance" methodname="SyncDictionaryInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1947604399" result="Passed" start-time="2020-05-02 11:16:05Z" end-time="2020-05-02 11:16:06Z" duration="0.498072" asserts="0">
                <properties />
              </test-case>
              <test-case id="1858" name="SyncDictionaryStructItem" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItem" methodname="SyncDictionaryStructItem" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="787054308" result="Passed" start-time="2020-05-02 11:16:06Z" end-time="2020-05-02 11:16:06Z" duration="0.497192" asserts="0">
                <properties />
              </test-case>
              <test-case id="1860" name="SyncDictionaryStructItemWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomDeserializeOnly" methodname="SyncDictionaryStructItemWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1021238400" result="Passed" start-time="2020-05-02 11:16:06Z" end-time="2020-05-02 11:16:07Z" duration="0.499363" asserts="0">
                <properties />
              </test-case>
              <test-case id="1862" name="SyncDictionaryStructItemWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomMethods" methodname="SyncDictionaryStructItemWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="865379136" result="Passed" start-time="2020-05-02 11:16:07Z" end-time="2020-05-02 11:16:07Z" duration="0.498517" asserts="0">
                <properties />
              </test-case>
              <test-case id="1864" name="SyncDictionaryStructItemWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomSerializeOnly" methodname="SyncDictionaryStructItemWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="300286000" result="Passed" start-time="2020-05-02 11:16:07Z" end-time="2020-05-02 11:16:08Z" duration="0.498817" asserts="0">
                <properties />
              </test-case>
              <test-case id="1857" name="SyncDictionaryStructKey" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKey" methodname="SyncDictionaryStructKey" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1939233351" result="Passed" start-time="2020-05-02 11:16:08Z" end-time="2020-05-02 11:16:08Z" duration="0.497660" asserts="0">
                <properties />
              </test-case>
              <test-case id="1859" name="SyncDictionaryStructKeyWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomDeserializeOnly" methodname="SyncDictionaryStructKeyWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="234011467" result="Passed" start-time="2020-05-02 11:16:08Z" end-time="2020-05-02 11:16:09Z" duration="0.500310" asserts="0">
                <properties />
              </test-case>
              <test-case id="1861" name="SyncDictionaryStructKeyWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomMethods" methodname="SyncDictionaryStructKeyWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1930204608" result="Passed" start-time="2020-05-02 11:16:09Z" end-time="2020-05-02 11:16:09Z" duration="0.497410" asserts="0">
                <properties />
              </test-case>
              <test-case id="1863" name="SyncDictionaryStructKeyWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomSerializeOnly" methodname="SyncDictionaryStructKeyWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1508936463" result="Passed" start-time="2020-05-02 11:16:09Z" end-time="2020-05-02 11:16:10Z" duration="0.499636" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1874" name="WeaverSyncListTests" fullname="Mirror.Weaver.Tests.WeaverSyncListTests" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" testcasecount="25" result="Passed" start-time="2020-05-02 11:16:10Z" end-time="2020-05-02 11:16:22Z" duration="12.668409" total="25" passed="25" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1875" name="SyncList" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncList" methodname="SyncList" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1998263482" result="Passed" start-time="2020-05-02 11:16:10Z" end-time="2020-05-02 11:16:10Z" duration="0.425872" asserts="0">
                <properties />
              </test-case>
              <test-case id="1876" name="SyncListByteValid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListByteValid" methodname="SyncListByteValid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1051059250" result="Passed" start-time="2020-05-02 11:16:10Z" end-time="2020-05-02 11:16:11Z" duration="0.498178" asserts="0">
                <properties />
              </test-case>
              <test-case id="1892" name="SyncListErrorForGenericStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStruct" methodname="SyncListErrorForGenericStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="352211386" result="Passed" start-time="2020-05-02 11:16:11Z" end-time="2020-05-02 11:16:11Z" duration="0.499159" asserts="0">
                <properties />
              </test-case>
              <test-case id="1893" name="SyncListErrorForGenericStructWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStructWithCustomDeserializeOnly" methodname="SyncListErrorForGenericStructWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1086117888" result="Passed" start-time="2020-05-02 11:16:11Z" end-time="2020-05-02 11:16:12Z" duration="0.499487" asserts="0">
                <properties />
              </test-case>
              <test-case id="1894" name="SyncListErrorForGenericStructWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStructWithCustomSerializeOnly" methodname="SyncListErrorForGenericStructWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="113546243" result="Passed" start-time="2020-05-02 11:16:12Z" end-time="2020-05-02 11:16:12Z" duration="0.498752" asserts="0">
                <properties />
              </test-case>
              <test-case id="1896" name="SyncListErrorForInterface" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForInterface" methodname="SyncListErrorForInterface" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1520707405" result="Passed" start-time="2020-05-02 11:16:12Z" end-time="2020-05-02 11:16:13Z" duration="0.497084" asserts="0">
                <properties />
              </test-case>
              <test-case id="1899" name="SyncListErrorWhenUsingGenericListInNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorWhenUsingGenericListInNetworkBehaviour" methodname="SyncListErrorWhenUsingGenericListInNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="867320063" result="Passed" start-time="2020-05-02 11:16:13Z" end-time="2020-05-02 11:16:13Z" duration="0.498414" asserts="0">
                <properties />
              </test-case>
              <test-case id="1877" name="SyncListGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericAbstractInheritance" methodname="SyncListGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="177513832" result="Passed" start-time="2020-05-02 11:16:13Z" end-time="2020-05-02 11:16:14Z" duration="0.498544" asserts="0">
                <properties />
              </test-case>
              <test-case id="1878" name="SyncListGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericInheritance" methodname="SyncListGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="996086374" result="Passed" start-time="2020-05-02 11:16:14Z" end-time="2020-05-02 11:16:14Z" duration="0.499134" asserts="0">
                <properties />
              </test-case>
              <test-case id="1879" name="SyncListGenericInheritanceWithMultipleGeneric" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericInheritanceWithMultipleGeneric" methodname="SyncListGenericInheritanceWithMultipleGeneric" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2062850170" result="Passed" start-time="2020-05-02 11:16:14Z" end-time="2020-05-02 11:16:15Z" duration="0.498684" asserts="0">
                <properties />
              </test-case>
              <test-case id="1895" name="SyncListGenericStructWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericStructWithCustomMethods" methodname="SyncListGenericStructWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1246744551" result="Passed" start-time="2020-05-02 11:16:15Z" end-time="2020-05-02 11:16:15Z" duration="0.497342" asserts="0">
                <properties />
              </test-case>
              <test-case id="1880" name="SyncListInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInheritance" methodname="SyncListInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="554504633" result="Passed" start-time="2020-05-02 11:16:15Z" end-time="2020-05-02 11:16:16Z" duration="0.499393" asserts="0">
                <properties />
              </test-case>
              <test-case id="1898" name="SyncListInheritanceWithOverrides" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInheritanceWithOverrides" methodname="SyncListInheritanceWithOverrides" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1510983096" result="Passed" start-time="2020-05-02 11:16:16Z" end-time="2020-05-02 11:16:16Z" duration="0.498307" asserts="0">
                <properties />
              </test-case>
              <test-case id="1897" name="SyncListInterfaceWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInterfaceWithCustomMethods" methodname="SyncListInterfaceWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="489917005" result="Passed" start-time="2020-05-02 11:16:16Z" end-time="2020-05-02 11:16:17Z" duration="0.498695" asserts="0">
                <properties />
              </test-case>
              <test-case id="1881" name="SyncListMissingParamlessCtor" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListMissingParamlessCtor" methodname="SyncListMissingParamlessCtor" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1655251257" result="Passed" start-time="2020-05-02 11:16:17Z" end-time="2020-05-02 11:16:17Z" duration="0.499401" asserts="0">
                <properties />
              </test-case>
              <test-case id="1882" name="SyncListMissingParamlessCtorManuallyInitialized" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListMissingParamlessCtorManuallyInitialized" methodname="SyncListMissingParamlessCtorManuallyInitialized" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1267274330" result="Passed" start-time="2020-05-02 11:16:17Z" end-time="2020-05-02 11:16:18Z" duration="0.498178" asserts="0">
                <properties />
              </test-case>
              <test-case id="1884" name="SyncListNestedInAbstractClass" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInAbstractClass" methodname="SyncListNestedInAbstractClass" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2098601881" result="Passed" start-time="2020-05-02 11:16:18Z" end-time="2020-05-02 11:16:18Z" duration="0.498283" asserts="0">
                <properties />
              </test-case>
              <test-case id="1885" name="SyncListNestedInAbstractClassWithInvalid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInAbstractClassWithInvalid" methodname="SyncListNestedInAbstractClassWithInvalid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="787079777" result="Passed" start-time="2020-05-02 11:16:18Z" end-time="2020-05-02 11:16:19Z" duration="0.498999" asserts="0">
                <properties />
              </test-case>
              <test-case id="1886" name="SyncListNestedInStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInStruct" methodname="SyncListNestedInStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="535932399" result="Passed" start-time="2020-05-02 11:16:19Z" end-time="2020-05-02 11:16:19Z" duration="0.497261" asserts="0">
                <properties />
              </test-case>
              <test-case id="1887" name="SyncListNestedInStructWithInvalid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInStructWithInvalid" methodname="SyncListNestedInStructWithInvalid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="197423922" result="Passed" start-time="2020-05-02 11:16:19Z" end-time="2020-05-02 11:16:20Z" duration="0.500606" asserts="0">
                <properties />
              </test-case>
              <test-case id="1883" name="SyncListNestedStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedStruct" methodname="SyncListNestedStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="828422555" result="Passed" start-time="2020-05-02 11:16:20Z" end-time="2020-05-02 11:16:20Z" duration="0.497705" asserts="0">
                <properties />
              </test-case>
              <test-case id="1888" name="SyncListStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStruct" methodname="SyncListStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1666806721" result="Passed" start-time="2020-05-02 11:16:20Z" end-time="2020-05-02 11:16:21Z" duration="0.497525" asserts="0">
                <properties />
              </test-case>
              <test-case id="1889" name="SyncListStructWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomDeserializeOnly" methodname="SyncListStructWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="554263797" result="Passed" start-time="2020-05-02 11:16:21Z" end-time="2020-05-02 11:16:21Z" duration="0.499409" asserts="0">
                <properties />
              </test-case>
              <test-case id="1890" name="SyncListStructWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomMethods" methodname="SyncListStructWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1169810778" result="Passed" start-time="2020-05-02 11:16:21Z" end-time="2020-05-02 11:16:22Z" duration="0.498616" asserts="0">
                <properties />
              </test-case>
              <test-case id="1891" name="SyncListStructWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomSerializeOnly" methodname="SyncListStructWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="204312638" result="Passed" start-time="2020-05-02 11:16:22Z" end-time="2020-05-02 11:16:22Z" duration="0.498435" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1900" name="WeaverSyncSetTests" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-05-02 11:16:22Z" end-time="2020-05-02 11:16:26Z" duration="3.275539" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1901" name="SyncSet" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSet" methodname="SyncSet" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="125122432" result="Passed" start-time="2020-05-02 11:16:22Z" end-time="2020-05-02 11:16:23Z" duration="0.531552" asserts="0">
                <properties />
              </test-case>
              <test-case id="1902" name="SyncSetByteValid" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetByteValid" methodname="SyncSetByteValid" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1218207323" result="Passed" start-time="2020-05-02 11:16:23Z" end-time="2020-05-02 11:16:24Z" duration="0.498277" asserts="0">
                <properties />
              </test-case>
              <test-case id="1903" name="SyncSetGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetGenericAbstractInheritance" methodname="SyncSetGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1306401142" result="Passed" start-time="2020-05-02 11:16:24Z" end-time="2020-05-02 11:16:24Z" duration="0.498663" asserts="0">
                <properties />
              </test-case>
              <test-case id="1904" name="SyncSetGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetGenericInheritance" methodname="SyncSetGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1994463937" result="Passed" start-time="2020-05-02 11:16:24Z" end-time="2020-05-02 11:16:25Z" duration="0.499537" asserts="0">
                <properties />
              </test-case>
              <test-case id="1905" name="SyncSetInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetInheritance" methodname="SyncSetInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1009410057" result="Passed" start-time="2020-05-02 11:16:25Z" end-time="2020-05-02 11:16:25Z" duration="0.498665" asserts="0">
                <properties />
              </test-case>
              <test-case id="1906" name="SyncSetStruct" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetStruct" methodname="SyncSetStruct" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1643473225" result="Passed" start-time="2020-05-02 11:16:25Z" end-time="2020-05-02 11:16:26Z" duration="0.499219" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1907" name="WeaverSyncVarTests" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" testcasecount="13" result="Passed" start-time="2020-05-02 11:16:26Z" end-time="2020-05-02 11:16:32Z" duration="6.793387" total="13" passed="13" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1918" name="SyncVarsCantBeArray" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsCantBeArray" methodname="SyncVarsCantBeArray" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1832798578" result="Passed" start-time="2020-05-02 11:16:26Z" end-time="2020-05-02 11:16:26Z" duration="0.542708" asserts="0">
                <properties />
              </test-case>
              <test-case id="1913" name="SyncVarsDerivedNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsDerivedNetworkBehaviour" methodname="SyncVarsDerivedNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1577574165" result="Passed" start-time="2020-05-02 11:16:26Z" end-time="2020-05-02 11:16:27Z" duration="0.497936" asserts="0">
                <properties />
              </test-case>
              <test-case id="1917" name="SyncVarsDifferentModule" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsDifferentModule" methodname="SyncVarsDifferentModule" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1489215159" result="Passed" start-time="2020-05-02 11:16:27Z" end-time="2020-05-02 11:16:27Z" duration="0.497977" asserts="0">
                <properties />
              </test-case>
              <test-case id="1915" name="SyncVarsGenericParam" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsGenericParam" methodname="SyncVarsGenericParam" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="2039185548" result="Passed" start-time="2020-05-02 11:16:27Z" end-time="2020-05-02 11:16:28Z" duration="0.498123" asserts="0">
                <properties />
              </test-case>
              <test-case id="1916" name="SyncVarsInterface" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsInterface" methodname="SyncVarsInterface" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1333733752" result="Passed" start-time="2020-05-02 11:16:28Z" end-time="2020-05-02 11:16:28Z" duration="0.499324" asserts="0">
                <properties />
              </test-case>
              <test-case id="1920" name="SyncVarsMoreThan63" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsMoreThan63" methodname="SyncVarsMoreThan63" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1091566040" result="Passed" start-time="2020-05-02 11:16:28Z" end-time="2020-05-02 11:16:29Z" duration="0.499236" asserts="0">
                <properties />
              </test-case>
              <test-case id="1909" name="SyncVarsNoHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsNoHook" methodname="SyncVarsNoHook" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="106651137" result="Passed" start-time="2020-05-02 11:16:29Z" end-time="2020-05-02 11:16:29Z" duration="0.498407" asserts="0">
                <properties />
              </test-case>
              <test-case id="1910" name="SyncVarsNoHookParams" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsNoHookParams" methodname="SyncVarsNoHookParams" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="112224612" result="Passed" start-time="2020-05-02 11:16:29Z" end-time="2020-05-02 11:16:30Z" duration="0.498733" asserts="0">
                <properties />
              </test-case>
              <test-case id="1914" name="SyncVarsStatic" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsStatic" methodname="SyncVarsStatic" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="2123620464" result="Passed" start-time="2020-05-02 11:16:30Z" end-time="2020-05-02 11:16:30Z" duration="0.498296" asserts="0">
                <properties />
              </test-case>
              <test-case id="1919" name="SyncVarsSyncList" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsSyncList" methodname="SyncVarsSyncList" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1127977912" result="Passed" start-time="2020-05-02 11:16:30Z" end-time="2020-05-02 11:16:31Z" duration="0.498185" asserts="0">
                <properties />
              </test-case>
              <test-case id="1911" name="SyncVarsTooManyHookParams" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsTooManyHookParams" methodname="SyncVarsTooManyHookParams" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="721673197" result="Passed" start-time="2020-05-02 11:16:31Z" end-time="2020-05-02 11:16:31Z" duration="0.499312" asserts="0">
                <properties />
              </test-case>
              <test-case id="1908" name="SyncVarsValid" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsValid" methodname="SyncVarsValid" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1482787861" result="Passed" start-time="2020-05-02 11:16:31Z" end-time="2020-05-02 11:16:32Z" duration="0.497990" asserts="0">
                <properties />
              </test-case>
              <test-case id="1912" name="SyncVarsWrongHookType" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsWrongHookType" methodname="SyncVarsWrongHookType" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="895134596" result="Passed" start-time="2020-05-02 11:16:32Z" end-time="2020-05-02 11:16:32Z" duration="0.498876" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1921" name="WeaverTargetRpcTests" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-05-02 11:16:32Z" end-time="2020-05-02 11:16:36Z" duration="3.186414" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1927" name="SyncEventParamGeneric" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.SyncEventParamGeneric" methodname="SyncEventParamGeneric" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1003197859" result="Passed" start-time="2020-05-02 11:16:33Z" end-time="2020-05-02 11:16:33Z" duration="0.443574" asserts="0">
                <properties />
              </test-case>
              <test-case id="1926" name="SyncEventStartsWithEvent" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.SyncEventStartsWithEvent" methodname="SyncEventStartsWithEvent" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1839887221" result="Passed" start-time="2020-05-02 11:16:33Z" end-time="2020-05-02 11:16:34Z" duration="0.498683" asserts="0">
                <properties />
              </test-case>
              <test-case id="1925" name="SyncEventValid" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.SyncEventValid" methodname="SyncEventValid" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="91645454" result="Passed" start-time="2020-05-02 11:16:34Z" end-time="2020-05-02 11:16:34Z" duration="0.499181" asserts="0">
                <properties />
              </test-case>
              <test-case id="1924" name="TargetRpcCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcCantBeStatic" methodname="TargetRpcCantBeStatic" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1065360584" result="Passed" start-time="2020-05-02 11:16:34Z" end-time="2020-05-02 11:16:35Z" duration="0.498491" asserts="0">
                <properties />
              </test-case>
              <test-case id="1923" name="TargetRpcStartsWithTarget" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcStartsWithTarget" methodname="TargetRpcStartsWithTarget" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1657978492" result="Passed" start-time="2020-05-02 11:16:35Z" end-time="2020-05-02 11:16:35Z" duration="0.497723" asserts="0">
                <properties />
              </test-case>
              <test-case id="1922" name="TargetRpcValid" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcValid" methodname="TargetRpcValid" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1020289445" result="Passed" start-time="2020-05-02 11:16:35Z" end-time="2020-05-02 11:16:36Z" duration="0.499521" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" id="2461" name="Telepathy" fullname="Telepathy" runstate="Runnable" testcasecount="17" result="Skipped" label="Ignored" start-time="2020-05-02 11:16:37Z" end-time="2020-05-02 11:16:38Z" duration="0.258541" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
        <properties />
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestSuite" id="2462" name="Tests" fullname="Telepathy.Tests" runstate="Runnable" testcasecount="17" result="Skipped" label="Ignored" start-time="2020-05-02 11:16:38Z" end-time="2020-05-02 11:16:38Z" duration="0.134320" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
          <properties />
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-suite type="TestFixture" id="1751" name="TransportTest" fullname="Telepathy.Tests.TransportTest" classname="Telepathy.Tests.TransportTest" runstate="Ignored" testcasecount="17" result="Skipped" label="Ignored" site="SetUp" start-time="2020-05-02 11:16:38Z" end-time="2020-05-02 11:16:38Z" duration="0.015988" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
            <properties>
              <property name="Category" value="Telepathy" />
              <property name="_SKIPREASON" value="Telepathy tests are flaky" />
            </properties>
            <reason>
              <message><![CDATA[Telepathy tests are flaky]]></message>
            </reason>
            <test-case id="1764" name="AllocationAttackTest" fullname="Telepathy.Tests.TransportTest.AllocationAttackTest" methodname="AllocationAttackTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1100019233" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1758" name="ClientKickedCleanupTest" fullname="Telepathy.Tests.TransportTest.ClientKickedCleanupTest" methodname="ClientKickedCleanupTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1142514989" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1756" name="ClientTest" fullname="Telepathy.Tests.TransportTest.ClientTest" methodname="ClientTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="656113810" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1761" name="ConnectIPv4Test" fullname="Telepathy.Tests.TransportTest.ConnectIPv4Test" methodname="ConnectIPv4Test" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="16739578" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1762" name="ConnectIPv6Test" fullname="Telepathy.Tests.TransportTest.ConnectIPv6Test" methodname="ConnectIPv6Test" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1546737731" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1753" name="DisconnectImmediateTest" fullname="Telepathy.Tests.TransportTest.DisconnectImmediateTest" methodname="DisconnectImmediateTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1604571194" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1759" name="GetConnectionInfoTest" fullname="Telepathy.Tests.TransportTest.GetConnectionInfoTest" methodname="GetConnectionInfoTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1862626549" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1768" name="IntToBytesBigNonAllocTest" fullname="Telepathy.Tests.TransportTest.IntToBytesBigNonAllocTest" methodname="IntToBytesBigNonAllocTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="251991216" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1767" name="IntToBytesBigTest" fullname="Telepathy.Tests.TransportTest.IntToBytesBigTest" methodname="IntToBytesBigTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1617246825" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1763" name="LargeMessageTest" fullname="Telepathy.Tests.TransportTest.LargeMessageTest" methodname="LargeMessageTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="297507603" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1752" name="NextConnectionIdTest" fullname="Telepathy.Tests.TransportTest.NextConnectionIdTest" methodname="NextConnectionIdTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="411560364" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1760" name="ParseLocalHostTest" fullname="Telepathy.Tests.TransportTest.ParseLocalHostTest" methodname="ParseLocalHostTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1040745354" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1757" name="ServerDisconnectClientTest" fullname="Telepathy.Tests.TransportTest.ServerDisconnectClientTest" methodname="ServerDisconnectClientTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1544662007" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1766" name="ServerStartStopRepeatedTest" fullname="Telepathy.Tests.TransportTest.ServerStartStopRepeatedTest" methodname="ServerStartStopRepeatedTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1426908596" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1765" name="ServerStartStopTest" fullname="Telepathy.Tests.TransportTest.ServerStartStopTest" methodname="ServerStartStopTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1678799634" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1755" name="ServerTest" fullname="Telepathy.Tests.TransportTest.ServerTest" methodname="ServerTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="864826053" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1754" name="SpamSendTest" fullname="Telepathy.Tests.TransportTest.SpamSendTest" methodname="SpamSendTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1246721485" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>